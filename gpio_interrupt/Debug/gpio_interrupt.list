
gpio_interrupt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000c58  08000194  08000194  00001194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000014  08000dec  08000dec  00001dec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000e00  08000e00  00002078  2**0
                  CONTENTS
  4 .ARM          00000000  08000e00  08000e00  00002078  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000e00  08000e00  00002078  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000e00  08000e00  00001e00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000e04  08000e04  00001e04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000078  20000000  08000e08  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  20000078  08000e80  00002078  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001e4  08000e80  000021e4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00002078  2**0
                  CONTENTS, READONLY
 12 .debug_info   000009d1  00000000  00000000  000020a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000033e  00000000  00000000  00002a79  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000128  00000000  00000000  00002db8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000cb  00000000  00000000  00002ee0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002cd0  00000000  00000000  00002fab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000014a3  00000000  00000000  00005c7b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009828  00000000  00000000  0000711e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00010946  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000a0c  00000000  00000000  0001098c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005e  00000000  00000000  00011398  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	@ (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000078 	.word	0x20000078
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000dd4 	.word	0x08000dd4

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	@ (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	@ (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	@ (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	2000007c 	.word	0x2000007c
 80001d0:	08000dd4 	.word	0x08000dd4

080001d4 <Button_Init>:
uint32_t volatile *pSYSCFG_EXTICR4=(uint32_t*)0x40013814;

uint32_t *pNVIC_ISER1=(uint32_t*)0xe000e104;

void Button_Init(void)
{
 80001d4:	b480      	push	{r7}
 80001d6:	af00      	add	r7, sp, #0
	*pAHBIENR |=(1U<<2);
 80001d8:	4b1a      	ldr	r3, [pc, #104]	@ (8000244 <Button_Init+0x70>)
 80001da:	681b      	ldr	r3, [r3, #0]
 80001dc:	681a      	ldr	r2, [r3, #0]
 80001de:	4b19      	ldr	r3, [pc, #100]	@ (8000244 <Button_Init+0x70>)
 80001e0:	681b      	ldr	r3, [r3, #0]
 80001e2:	f042 0204 	orr.w	r2, r2, #4
 80001e6:	601a      	str	r2, [r3, #0]

	*pAPB2ENR  |=(1U<<14);
 80001e8:	4b17      	ldr	r3, [pc, #92]	@ (8000248 <Button_Init+0x74>)
 80001ea:	681b      	ldr	r3, [r3, #0]
 80001ec:	681a      	ldr	r2, [r3, #0]
 80001ee:	4b16      	ldr	r3, [pc, #88]	@ (8000248 <Button_Init+0x74>)
 80001f0:	681b      	ldr	r3, [r3, #0]
 80001f2:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80001f6:	601a      	str	r2, [r3, #0]

	*pSYSCFG_EXTICR4 |=(1U<<5);
 80001f8:	4b14      	ldr	r3, [pc, #80]	@ (800024c <Button_Init+0x78>)
 80001fa:	681b      	ldr	r3, [r3, #0]
 80001fc:	681a      	ldr	r2, [r3, #0]
 80001fe:	4b13      	ldr	r3, [pc, #76]	@ (800024c <Button_Init+0x78>)
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	f042 0220 	orr.w	r2, r2, #32
 8000206:	601a      	str	r2, [r3, #0]

	*pEXTIFTSR |=(1U<<13);
 8000208:	4b11      	ldr	r3, [pc, #68]	@ (8000250 <Button_Init+0x7c>)
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	681a      	ldr	r2, [r3, #0]
 800020e:	4b10      	ldr	r3, [pc, #64]	@ (8000250 <Button_Init+0x7c>)
 8000210:	681b      	ldr	r3, [r3, #0]
 8000212:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8000216:	601a      	str	r2, [r3, #0]
	*pEXTIMR |=(1U<<13);
 8000218:	4b0e      	ldr	r3, [pc, #56]	@ (8000254 <Button_Init+0x80>)
 800021a:	681b      	ldr	r3, [r3, #0]
 800021c:	681a      	ldr	r2, [r3, #0]
 800021e:	4b0d      	ldr	r3, [pc, #52]	@ (8000254 <Button_Init+0x80>)
 8000220:	681b      	ldr	r3, [r3, #0]
 8000222:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8000226:	601a      	str	r2, [r3, #0]
	*pNVIC_ISER1 |=(1U<<8);
 8000228:	4b0b      	ldr	r3, [pc, #44]	@ (8000258 <Button_Init+0x84>)
 800022a:	681b      	ldr	r3, [r3, #0]
 800022c:	681a      	ldr	r2, [r3, #0]
 800022e:	4b0a      	ldr	r3, [pc, #40]	@ (8000258 <Button_Init+0x84>)
 8000230:	681b      	ldr	r3, [r3, #0]
 8000232:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8000236:	601a      	str	r2, [r3, #0]

}
 8000238:	bf00      	nop
 800023a:	46bd      	mov	sp, r7
 800023c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000240:	4770      	bx	lr
 8000242:	bf00      	nop
 8000244:	20000000 	.word	0x20000000
 8000248:	20000004 	.word	0x20000004
 800024c:	20000014 	.word	0x20000014
 8000250:	20000010 	.word	0x20000010
 8000254:	2000000c 	.word	0x2000000c
 8000258:	20000018 	.word	0x20000018

0800025c <main>:

int main(void)
{
 800025c:	b580      	push	{r7, lr}
 800025e:	af00      	add	r7, sp, #0
    /* Loop forever */
	Button_Init();
 8000260:	f7ff ffb8 	bl	80001d4 <Button_Init>
	while(1)
 8000264:	bf00      	nop
 8000266:	e7fd      	b.n	8000264 <main+0x8>

08000268 <EXTI15_10_IRQHandler>:
	}

}

void EXTI15_10_IRQHandler(void)
{
 8000268:	b580      	push	{r7, lr}
 800026a:	af00      	add	r7, sp, #0
	printf("Button is pressed \n");
 800026c:	4806      	ldr	r0, [pc, #24]	@ (8000288 <EXTI15_10_IRQHandler+0x20>)
 800026e:	f000 fa1d 	bl	80006ac <puts>
	*pEXTIPR |=(1U<<13);
 8000272:	4b06      	ldr	r3, [pc, #24]	@ (800028c <EXTI15_10_IRQHandler+0x24>)
 8000274:	681b      	ldr	r3, [r3, #0]
 8000276:	681a      	ldr	r2, [r3, #0]
 8000278:	4b04      	ldr	r3, [pc, #16]	@ (800028c <EXTI15_10_IRQHandler+0x24>)
 800027a:	681b      	ldr	r3, [r3, #0]
 800027c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8000280:	601a      	str	r2, [r3, #0]
}
 8000282:	bf00      	nop
 8000284:	bd80      	pop	{r7, pc}
 8000286:	bf00      	nop
 8000288:	08000dec 	.word	0x08000dec
 800028c:	20000008 	.word	0x20000008

08000290 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000290:	b480      	push	{r7}
 8000292:	b083      	sub	sp, #12
 8000294:	af00      	add	r7, sp, #0
 8000296:	4603      	mov	r3, r0
 8000298:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800029a:	4b0f      	ldr	r3, [pc, #60]	@ (80002d8 <ITM_SendChar+0x48>)
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	4a0e      	ldr	r2, [pc, #56]	@ (80002d8 <ITM_SendChar+0x48>)
 80002a0:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80002a4:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80002a6:	4b0d      	ldr	r3, [pc, #52]	@ (80002dc <ITM_SendChar+0x4c>)
 80002a8:	681b      	ldr	r3, [r3, #0]
 80002aa:	4a0c      	ldr	r2, [pc, #48]	@ (80002dc <ITM_SendChar+0x4c>)
 80002ac:	f043 0301 	orr.w	r3, r3, #1
 80002b0:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80002b2:	bf00      	nop
 80002b4:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80002b8:	681b      	ldr	r3, [r3, #0]
 80002ba:	f003 0301 	and.w	r3, r3, #1
 80002be:	2b00      	cmp	r3, #0
 80002c0:	d0f8      	beq.n	80002b4 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80002c2:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 80002c6:	79fb      	ldrb	r3, [r7, #7]
 80002c8:	6013      	str	r3, [r2, #0]
}
 80002ca:	bf00      	nop
 80002cc:	370c      	adds	r7, #12
 80002ce:	46bd      	mov	sp, r7
 80002d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002d4:	4770      	bx	lr
 80002d6:	bf00      	nop
 80002d8:	e000edfc 	.word	0xe000edfc
 80002dc:	e0000e00 	.word	0xe0000e00

080002e0 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002e0:	b580      	push	{r7, lr}
 80002e2:	b086      	sub	sp, #24
 80002e4:	af00      	add	r7, sp, #0
 80002e6:	60f8      	str	r0, [r7, #12]
 80002e8:	60b9      	str	r1, [r7, #8]
 80002ea:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002ec:	2300      	movs	r3, #0
 80002ee:	617b      	str	r3, [r7, #20]
 80002f0:	e00a      	b.n	8000308 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80002f2:	f3af 8000 	nop.w
 80002f6:	4601      	mov	r1, r0
 80002f8:	68bb      	ldr	r3, [r7, #8]
 80002fa:	1c5a      	adds	r2, r3, #1
 80002fc:	60ba      	str	r2, [r7, #8]
 80002fe:	b2ca      	uxtb	r2, r1
 8000300:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000302:	697b      	ldr	r3, [r7, #20]
 8000304:	3301      	adds	r3, #1
 8000306:	617b      	str	r3, [r7, #20]
 8000308:	697a      	ldr	r2, [r7, #20]
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	429a      	cmp	r2, r3
 800030e:	dbf0      	blt.n	80002f2 <_read+0x12>
  }

  return len;
 8000310:	687b      	ldr	r3, [r7, #4]
}
 8000312:	4618      	mov	r0, r3
 8000314:	3718      	adds	r7, #24
 8000316:	46bd      	mov	sp, r7
 8000318:	bd80      	pop	{r7, pc}

0800031a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800031a:	b580      	push	{r7, lr}
 800031c:	b086      	sub	sp, #24
 800031e:	af00      	add	r7, sp, #0
 8000320:	60f8      	str	r0, [r7, #12]
 8000322:	60b9      	str	r1, [r7, #8]
 8000324:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000326:	2300      	movs	r3, #0
 8000328:	617b      	str	r3, [r7, #20]
 800032a:	e009      	b.n	8000340 <_write+0x26>
  {
   // __io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 800032c:	68bb      	ldr	r3, [r7, #8]
 800032e:	1c5a      	adds	r2, r3, #1
 8000330:	60ba      	str	r2, [r7, #8]
 8000332:	781b      	ldrb	r3, [r3, #0]
 8000334:	4618      	mov	r0, r3
 8000336:	f7ff ffab 	bl	8000290 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800033a:	697b      	ldr	r3, [r7, #20]
 800033c:	3301      	adds	r3, #1
 800033e:	617b      	str	r3, [r7, #20]
 8000340:	697a      	ldr	r2, [r7, #20]
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	429a      	cmp	r2, r3
 8000346:	dbf1      	blt.n	800032c <_write+0x12>
  }
  return len;
 8000348:	687b      	ldr	r3, [r7, #4]
}
 800034a:	4618      	mov	r0, r3
 800034c:	3718      	adds	r7, #24
 800034e:	46bd      	mov	sp, r7
 8000350:	bd80      	pop	{r7, pc}

08000352 <_close>:

int _close(int file)
{
 8000352:	b480      	push	{r7}
 8000354:	b083      	sub	sp, #12
 8000356:	af00      	add	r7, sp, #0
 8000358:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800035a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800035e:	4618      	mov	r0, r3
 8000360:	370c      	adds	r7, #12
 8000362:	46bd      	mov	sp, r7
 8000364:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000368:	4770      	bx	lr

0800036a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800036a:	b480      	push	{r7}
 800036c:	b083      	sub	sp, #12
 800036e:	af00      	add	r7, sp, #0
 8000370:	6078      	str	r0, [r7, #4]
 8000372:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000374:	683b      	ldr	r3, [r7, #0]
 8000376:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800037a:	605a      	str	r2, [r3, #4]
  return 0;
 800037c:	2300      	movs	r3, #0
}
 800037e:	4618      	mov	r0, r3
 8000380:	370c      	adds	r7, #12
 8000382:	46bd      	mov	sp, r7
 8000384:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000388:	4770      	bx	lr

0800038a <_isatty>:

int _isatty(int file)
{
 800038a:	b480      	push	{r7}
 800038c:	b083      	sub	sp, #12
 800038e:	af00      	add	r7, sp, #0
 8000390:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000392:	2301      	movs	r3, #1
}
 8000394:	4618      	mov	r0, r3
 8000396:	370c      	adds	r7, #12
 8000398:	46bd      	mov	sp, r7
 800039a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800039e:	4770      	bx	lr

080003a0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003a0:	b480      	push	{r7}
 80003a2:	b085      	sub	sp, #20
 80003a4:	af00      	add	r7, sp, #0
 80003a6:	60f8      	str	r0, [r7, #12]
 80003a8:	60b9      	str	r1, [r7, #8]
 80003aa:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003ac:	2300      	movs	r3, #0
}
 80003ae:	4618      	mov	r0, r3
 80003b0:	3714      	adds	r7, #20
 80003b2:	46bd      	mov	sp, r7
 80003b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003b8:	4770      	bx	lr
	...

080003bc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003bc:	b580      	push	{r7, lr}
 80003be:	b086      	sub	sp, #24
 80003c0:	af00      	add	r7, sp, #0
 80003c2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003c4:	4a14      	ldr	r2, [pc, #80]	@ (8000418 <_sbrk+0x5c>)
 80003c6:	4b15      	ldr	r3, [pc, #84]	@ (800041c <_sbrk+0x60>)
 80003c8:	1ad3      	subs	r3, r2, r3
 80003ca:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003cc:	697b      	ldr	r3, [r7, #20]
 80003ce:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003d0:	4b13      	ldr	r3, [pc, #76]	@ (8000420 <_sbrk+0x64>)
 80003d2:	681b      	ldr	r3, [r3, #0]
 80003d4:	2b00      	cmp	r3, #0
 80003d6:	d102      	bne.n	80003de <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003d8:	4b11      	ldr	r3, [pc, #68]	@ (8000420 <_sbrk+0x64>)
 80003da:	4a12      	ldr	r2, [pc, #72]	@ (8000424 <_sbrk+0x68>)
 80003dc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003de:	4b10      	ldr	r3, [pc, #64]	@ (8000420 <_sbrk+0x64>)
 80003e0:	681a      	ldr	r2, [r3, #0]
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	4413      	add	r3, r2
 80003e6:	693a      	ldr	r2, [r7, #16]
 80003e8:	429a      	cmp	r2, r3
 80003ea:	d207      	bcs.n	80003fc <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003ec:	f000 fa8c 	bl	8000908 <__errno>
 80003f0:	4603      	mov	r3, r0
 80003f2:	220c      	movs	r2, #12
 80003f4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003f6:	f04f 33ff 	mov.w	r3, #4294967295
 80003fa:	e009      	b.n	8000410 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003fc:	4b08      	ldr	r3, [pc, #32]	@ (8000420 <_sbrk+0x64>)
 80003fe:	681b      	ldr	r3, [r3, #0]
 8000400:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000402:	4b07      	ldr	r3, [pc, #28]	@ (8000420 <_sbrk+0x64>)
 8000404:	681a      	ldr	r2, [r3, #0]
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	4413      	add	r3, r2
 800040a:	4a05      	ldr	r2, [pc, #20]	@ (8000420 <_sbrk+0x64>)
 800040c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800040e:	68fb      	ldr	r3, [r7, #12]
}
 8000410:	4618      	mov	r0, r3
 8000412:	3718      	adds	r7, #24
 8000414:	46bd      	mov	sp, r7
 8000416:	bd80      	pop	{r7, pc}
 8000418:	20018000 	.word	0x20018000
 800041c:	00000400 	.word	0x00000400
 8000420:	20000094 	.word	0x20000094
 8000424:	200001e8 	.word	0x200001e8

08000428 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000428:	480d      	ldr	r0, [pc, #52]	@ (8000460 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800042a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800042c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000430:	480c      	ldr	r0, [pc, #48]	@ (8000464 <LoopForever+0x6>)
  ldr r1, =_edata
 8000432:	490d      	ldr	r1, [pc, #52]	@ (8000468 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000434:	4a0d      	ldr	r2, [pc, #52]	@ (800046c <LoopForever+0xe>)
  movs r3, #0
 8000436:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000438:	e002      	b.n	8000440 <LoopCopyDataInit>

0800043a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800043a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800043c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800043e:	3304      	adds	r3, #4

08000440 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000440:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000442:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000444:	d3f9      	bcc.n	800043a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000446:	4a0a      	ldr	r2, [pc, #40]	@ (8000470 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000448:	4c0a      	ldr	r4, [pc, #40]	@ (8000474 <LoopForever+0x16>)
  movs r3, #0
 800044a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800044c:	e001      	b.n	8000452 <LoopFillZerobss>

0800044e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800044e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000450:	3204      	adds	r2, #4

08000452 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000452:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000454:	d3fb      	bcc.n	800044e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000456:	f000 fa5d 	bl	8000914 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800045a:	f7ff feff 	bl	800025c <main>

0800045e <LoopForever>:

LoopForever:
  b LoopForever
 800045e:	e7fe      	b.n	800045e <LoopForever>
  ldr   r0, =_estack
 8000460:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000464:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000468:	20000078 	.word	0x20000078
  ldr r2, =_sidata
 800046c:	08000e08 	.word	0x08000e08
  ldr r2, =_sbss
 8000470:	20000078 	.word	0x20000078
  ldr r4, =_ebss
 8000474:	200001e4 	.word	0x200001e4

08000478 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000478:	e7fe      	b.n	8000478 <ADC_IRQHandler>
	...

0800047c <std>:
 800047c:	2300      	movs	r3, #0
 800047e:	b510      	push	{r4, lr}
 8000480:	4604      	mov	r4, r0
 8000482:	e9c0 3300 	strd	r3, r3, [r0]
 8000486:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800048a:	6083      	str	r3, [r0, #8]
 800048c:	8181      	strh	r1, [r0, #12]
 800048e:	6643      	str	r3, [r0, #100]	@ 0x64
 8000490:	81c2      	strh	r2, [r0, #14]
 8000492:	6183      	str	r3, [r0, #24]
 8000494:	4619      	mov	r1, r3
 8000496:	2208      	movs	r2, #8
 8000498:	305c      	adds	r0, #92	@ 0x5c
 800049a:	f000 f9e7 	bl	800086c <memset>
 800049e:	4b0d      	ldr	r3, [pc, #52]	@ (80004d4 <std+0x58>)
 80004a0:	6263      	str	r3, [r4, #36]	@ 0x24
 80004a2:	4b0d      	ldr	r3, [pc, #52]	@ (80004d8 <std+0x5c>)
 80004a4:	62a3      	str	r3, [r4, #40]	@ 0x28
 80004a6:	4b0d      	ldr	r3, [pc, #52]	@ (80004dc <std+0x60>)
 80004a8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80004aa:	4b0d      	ldr	r3, [pc, #52]	@ (80004e0 <std+0x64>)
 80004ac:	6323      	str	r3, [r4, #48]	@ 0x30
 80004ae:	4b0d      	ldr	r3, [pc, #52]	@ (80004e4 <std+0x68>)
 80004b0:	6224      	str	r4, [r4, #32]
 80004b2:	429c      	cmp	r4, r3
 80004b4:	d006      	beq.n	80004c4 <std+0x48>
 80004b6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80004ba:	4294      	cmp	r4, r2
 80004bc:	d002      	beq.n	80004c4 <std+0x48>
 80004be:	33d0      	adds	r3, #208	@ 0xd0
 80004c0:	429c      	cmp	r4, r3
 80004c2:	d105      	bne.n	80004d0 <std+0x54>
 80004c4:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80004c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004cc:	f000 ba46 	b.w	800095c <__retarget_lock_init_recursive>
 80004d0:	bd10      	pop	{r4, pc}
 80004d2:	bf00      	nop
 80004d4:	080006bd 	.word	0x080006bd
 80004d8:	080006df 	.word	0x080006df
 80004dc:	08000717 	.word	0x08000717
 80004e0:	0800073b 	.word	0x0800073b
 80004e4:	20000098 	.word	0x20000098

080004e8 <stdio_exit_handler>:
 80004e8:	4a02      	ldr	r2, [pc, #8]	@ (80004f4 <stdio_exit_handler+0xc>)
 80004ea:	4903      	ldr	r1, [pc, #12]	@ (80004f8 <stdio_exit_handler+0x10>)
 80004ec:	4803      	ldr	r0, [pc, #12]	@ (80004fc <stdio_exit_handler+0x14>)
 80004ee:	f000 b869 	b.w	80005c4 <_fwalk_sglue>
 80004f2:	bf00      	nop
 80004f4:	2000001c 	.word	0x2000001c
 80004f8:	08000c5d 	.word	0x08000c5d
 80004fc:	2000002c 	.word	0x2000002c

08000500 <cleanup_stdio>:
 8000500:	6841      	ldr	r1, [r0, #4]
 8000502:	4b0c      	ldr	r3, [pc, #48]	@ (8000534 <cleanup_stdio+0x34>)
 8000504:	4299      	cmp	r1, r3
 8000506:	b510      	push	{r4, lr}
 8000508:	4604      	mov	r4, r0
 800050a:	d001      	beq.n	8000510 <cleanup_stdio+0x10>
 800050c:	f000 fba6 	bl	8000c5c <_fflush_r>
 8000510:	68a1      	ldr	r1, [r4, #8]
 8000512:	4b09      	ldr	r3, [pc, #36]	@ (8000538 <cleanup_stdio+0x38>)
 8000514:	4299      	cmp	r1, r3
 8000516:	d002      	beq.n	800051e <cleanup_stdio+0x1e>
 8000518:	4620      	mov	r0, r4
 800051a:	f000 fb9f 	bl	8000c5c <_fflush_r>
 800051e:	68e1      	ldr	r1, [r4, #12]
 8000520:	4b06      	ldr	r3, [pc, #24]	@ (800053c <cleanup_stdio+0x3c>)
 8000522:	4299      	cmp	r1, r3
 8000524:	d004      	beq.n	8000530 <cleanup_stdio+0x30>
 8000526:	4620      	mov	r0, r4
 8000528:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800052c:	f000 bb96 	b.w	8000c5c <_fflush_r>
 8000530:	bd10      	pop	{r4, pc}
 8000532:	bf00      	nop
 8000534:	20000098 	.word	0x20000098
 8000538:	20000100 	.word	0x20000100
 800053c:	20000168 	.word	0x20000168

08000540 <global_stdio_init.part.0>:
 8000540:	b510      	push	{r4, lr}
 8000542:	4b0b      	ldr	r3, [pc, #44]	@ (8000570 <global_stdio_init.part.0+0x30>)
 8000544:	4c0b      	ldr	r4, [pc, #44]	@ (8000574 <global_stdio_init.part.0+0x34>)
 8000546:	4a0c      	ldr	r2, [pc, #48]	@ (8000578 <global_stdio_init.part.0+0x38>)
 8000548:	601a      	str	r2, [r3, #0]
 800054a:	4620      	mov	r0, r4
 800054c:	2200      	movs	r2, #0
 800054e:	2104      	movs	r1, #4
 8000550:	f7ff ff94 	bl	800047c <std>
 8000554:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000558:	2201      	movs	r2, #1
 800055a:	2109      	movs	r1, #9
 800055c:	f7ff ff8e 	bl	800047c <std>
 8000560:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000564:	2202      	movs	r2, #2
 8000566:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800056a:	2112      	movs	r1, #18
 800056c:	f7ff bf86 	b.w	800047c <std>
 8000570:	200001d0 	.word	0x200001d0
 8000574:	20000098 	.word	0x20000098
 8000578:	080004e9 	.word	0x080004e9

0800057c <__sfp_lock_acquire>:
 800057c:	4801      	ldr	r0, [pc, #4]	@ (8000584 <__sfp_lock_acquire+0x8>)
 800057e:	f000 b9ee 	b.w	800095e <__retarget_lock_acquire_recursive>
 8000582:	bf00      	nop
 8000584:	200001d9 	.word	0x200001d9

08000588 <__sfp_lock_release>:
 8000588:	4801      	ldr	r0, [pc, #4]	@ (8000590 <__sfp_lock_release+0x8>)
 800058a:	f000 b9e9 	b.w	8000960 <__retarget_lock_release_recursive>
 800058e:	bf00      	nop
 8000590:	200001d9 	.word	0x200001d9

08000594 <__sinit>:
 8000594:	b510      	push	{r4, lr}
 8000596:	4604      	mov	r4, r0
 8000598:	f7ff fff0 	bl	800057c <__sfp_lock_acquire>
 800059c:	6a23      	ldr	r3, [r4, #32]
 800059e:	b11b      	cbz	r3, 80005a8 <__sinit+0x14>
 80005a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005a4:	f7ff bff0 	b.w	8000588 <__sfp_lock_release>
 80005a8:	4b04      	ldr	r3, [pc, #16]	@ (80005bc <__sinit+0x28>)
 80005aa:	6223      	str	r3, [r4, #32]
 80005ac:	4b04      	ldr	r3, [pc, #16]	@ (80005c0 <__sinit+0x2c>)
 80005ae:	681b      	ldr	r3, [r3, #0]
 80005b0:	2b00      	cmp	r3, #0
 80005b2:	d1f5      	bne.n	80005a0 <__sinit+0xc>
 80005b4:	f7ff ffc4 	bl	8000540 <global_stdio_init.part.0>
 80005b8:	e7f2      	b.n	80005a0 <__sinit+0xc>
 80005ba:	bf00      	nop
 80005bc:	08000501 	.word	0x08000501
 80005c0:	200001d0 	.word	0x200001d0

080005c4 <_fwalk_sglue>:
 80005c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80005c8:	4607      	mov	r7, r0
 80005ca:	4688      	mov	r8, r1
 80005cc:	4614      	mov	r4, r2
 80005ce:	2600      	movs	r6, #0
 80005d0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80005d4:	f1b9 0901 	subs.w	r9, r9, #1
 80005d8:	d505      	bpl.n	80005e6 <_fwalk_sglue+0x22>
 80005da:	6824      	ldr	r4, [r4, #0]
 80005dc:	2c00      	cmp	r4, #0
 80005de:	d1f7      	bne.n	80005d0 <_fwalk_sglue+0xc>
 80005e0:	4630      	mov	r0, r6
 80005e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80005e6:	89ab      	ldrh	r3, [r5, #12]
 80005e8:	2b01      	cmp	r3, #1
 80005ea:	d907      	bls.n	80005fc <_fwalk_sglue+0x38>
 80005ec:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80005f0:	3301      	adds	r3, #1
 80005f2:	d003      	beq.n	80005fc <_fwalk_sglue+0x38>
 80005f4:	4629      	mov	r1, r5
 80005f6:	4638      	mov	r0, r7
 80005f8:	47c0      	blx	r8
 80005fa:	4306      	orrs	r6, r0
 80005fc:	3568      	adds	r5, #104	@ 0x68
 80005fe:	e7e9      	b.n	80005d4 <_fwalk_sglue+0x10>

08000600 <_puts_r>:
 8000600:	6a03      	ldr	r3, [r0, #32]
 8000602:	b570      	push	{r4, r5, r6, lr}
 8000604:	6884      	ldr	r4, [r0, #8]
 8000606:	4605      	mov	r5, r0
 8000608:	460e      	mov	r6, r1
 800060a:	b90b      	cbnz	r3, 8000610 <_puts_r+0x10>
 800060c:	f7ff ffc2 	bl	8000594 <__sinit>
 8000610:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000612:	07db      	lsls	r3, r3, #31
 8000614:	d405      	bmi.n	8000622 <_puts_r+0x22>
 8000616:	89a3      	ldrh	r3, [r4, #12]
 8000618:	0598      	lsls	r0, r3, #22
 800061a:	d402      	bmi.n	8000622 <_puts_r+0x22>
 800061c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800061e:	f000 f99e 	bl	800095e <__retarget_lock_acquire_recursive>
 8000622:	89a3      	ldrh	r3, [r4, #12]
 8000624:	0719      	lsls	r1, r3, #28
 8000626:	d502      	bpl.n	800062e <_puts_r+0x2e>
 8000628:	6923      	ldr	r3, [r4, #16]
 800062a:	2b00      	cmp	r3, #0
 800062c:	d135      	bne.n	800069a <_puts_r+0x9a>
 800062e:	4621      	mov	r1, r4
 8000630:	4628      	mov	r0, r5
 8000632:	f000 f8c5 	bl	80007c0 <__swsetup_r>
 8000636:	b380      	cbz	r0, 800069a <_puts_r+0x9a>
 8000638:	f04f 35ff 	mov.w	r5, #4294967295
 800063c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800063e:	07da      	lsls	r2, r3, #31
 8000640:	d405      	bmi.n	800064e <_puts_r+0x4e>
 8000642:	89a3      	ldrh	r3, [r4, #12]
 8000644:	059b      	lsls	r3, r3, #22
 8000646:	d402      	bmi.n	800064e <_puts_r+0x4e>
 8000648:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800064a:	f000 f989 	bl	8000960 <__retarget_lock_release_recursive>
 800064e:	4628      	mov	r0, r5
 8000650:	bd70      	pop	{r4, r5, r6, pc}
 8000652:	2b00      	cmp	r3, #0
 8000654:	da04      	bge.n	8000660 <_puts_r+0x60>
 8000656:	69a2      	ldr	r2, [r4, #24]
 8000658:	429a      	cmp	r2, r3
 800065a:	dc17      	bgt.n	800068c <_puts_r+0x8c>
 800065c:	290a      	cmp	r1, #10
 800065e:	d015      	beq.n	800068c <_puts_r+0x8c>
 8000660:	6823      	ldr	r3, [r4, #0]
 8000662:	1c5a      	adds	r2, r3, #1
 8000664:	6022      	str	r2, [r4, #0]
 8000666:	7019      	strb	r1, [r3, #0]
 8000668:	68a3      	ldr	r3, [r4, #8]
 800066a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800066e:	3b01      	subs	r3, #1
 8000670:	60a3      	str	r3, [r4, #8]
 8000672:	2900      	cmp	r1, #0
 8000674:	d1ed      	bne.n	8000652 <_puts_r+0x52>
 8000676:	2b00      	cmp	r3, #0
 8000678:	da11      	bge.n	800069e <_puts_r+0x9e>
 800067a:	4622      	mov	r2, r4
 800067c:	210a      	movs	r1, #10
 800067e:	4628      	mov	r0, r5
 8000680:	f000 f85f 	bl	8000742 <__swbuf_r>
 8000684:	3001      	adds	r0, #1
 8000686:	d0d7      	beq.n	8000638 <_puts_r+0x38>
 8000688:	250a      	movs	r5, #10
 800068a:	e7d7      	b.n	800063c <_puts_r+0x3c>
 800068c:	4622      	mov	r2, r4
 800068e:	4628      	mov	r0, r5
 8000690:	f000 f857 	bl	8000742 <__swbuf_r>
 8000694:	3001      	adds	r0, #1
 8000696:	d1e7      	bne.n	8000668 <_puts_r+0x68>
 8000698:	e7ce      	b.n	8000638 <_puts_r+0x38>
 800069a:	3e01      	subs	r6, #1
 800069c:	e7e4      	b.n	8000668 <_puts_r+0x68>
 800069e:	6823      	ldr	r3, [r4, #0]
 80006a0:	1c5a      	adds	r2, r3, #1
 80006a2:	6022      	str	r2, [r4, #0]
 80006a4:	220a      	movs	r2, #10
 80006a6:	701a      	strb	r2, [r3, #0]
 80006a8:	e7ee      	b.n	8000688 <_puts_r+0x88>
	...

080006ac <puts>:
 80006ac:	4b02      	ldr	r3, [pc, #8]	@ (80006b8 <puts+0xc>)
 80006ae:	4601      	mov	r1, r0
 80006b0:	6818      	ldr	r0, [r3, #0]
 80006b2:	f7ff bfa5 	b.w	8000600 <_puts_r>
 80006b6:	bf00      	nop
 80006b8:	20000028 	.word	0x20000028

080006bc <__sread>:
 80006bc:	b510      	push	{r4, lr}
 80006be:	460c      	mov	r4, r1
 80006c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006c4:	f000 f8fc 	bl	80008c0 <_read_r>
 80006c8:	2800      	cmp	r0, #0
 80006ca:	bfab      	itete	ge
 80006cc:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80006ce:	89a3      	ldrhlt	r3, [r4, #12]
 80006d0:	181b      	addge	r3, r3, r0
 80006d2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80006d6:	bfac      	ite	ge
 80006d8:	6563      	strge	r3, [r4, #84]	@ 0x54
 80006da:	81a3      	strhlt	r3, [r4, #12]
 80006dc:	bd10      	pop	{r4, pc}

080006de <__swrite>:
 80006de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80006e2:	461f      	mov	r7, r3
 80006e4:	898b      	ldrh	r3, [r1, #12]
 80006e6:	05db      	lsls	r3, r3, #23
 80006e8:	4605      	mov	r5, r0
 80006ea:	460c      	mov	r4, r1
 80006ec:	4616      	mov	r6, r2
 80006ee:	d505      	bpl.n	80006fc <__swrite+0x1e>
 80006f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006f4:	2302      	movs	r3, #2
 80006f6:	2200      	movs	r2, #0
 80006f8:	f000 f8d0 	bl	800089c <_lseek_r>
 80006fc:	89a3      	ldrh	r3, [r4, #12]
 80006fe:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000702:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000706:	81a3      	strh	r3, [r4, #12]
 8000708:	4632      	mov	r2, r6
 800070a:	463b      	mov	r3, r7
 800070c:	4628      	mov	r0, r5
 800070e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000712:	f000 b8e7 	b.w	80008e4 <_write_r>

08000716 <__sseek>:
 8000716:	b510      	push	{r4, lr}
 8000718:	460c      	mov	r4, r1
 800071a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800071e:	f000 f8bd 	bl	800089c <_lseek_r>
 8000722:	1c43      	adds	r3, r0, #1
 8000724:	89a3      	ldrh	r3, [r4, #12]
 8000726:	bf15      	itete	ne
 8000728:	6560      	strne	r0, [r4, #84]	@ 0x54
 800072a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800072e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000732:	81a3      	strheq	r3, [r4, #12]
 8000734:	bf18      	it	ne
 8000736:	81a3      	strhne	r3, [r4, #12]
 8000738:	bd10      	pop	{r4, pc}

0800073a <__sclose>:
 800073a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800073e:	f000 b89d 	b.w	800087c <_close_r>

08000742 <__swbuf_r>:
 8000742:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000744:	460e      	mov	r6, r1
 8000746:	4614      	mov	r4, r2
 8000748:	4605      	mov	r5, r0
 800074a:	b118      	cbz	r0, 8000754 <__swbuf_r+0x12>
 800074c:	6a03      	ldr	r3, [r0, #32]
 800074e:	b90b      	cbnz	r3, 8000754 <__swbuf_r+0x12>
 8000750:	f7ff ff20 	bl	8000594 <__sinit>
 8000754:	69a3      	ldr	r3, [r4, #24]
 8000756:	60a3      	str	r3, [r4, #8]
 8000758:	89a3      	ldrh	r3, [r4, #12]
 800075a:	071a      	lsls	r2, r3, #28
 800075c:	d501      	bpl.n	8000762 <__swbuf_r+0x20>
 800075e:	6923      	ldr	r3, [r4, #16]
 8000760:	b943      	cbnz	r3, 8000774 <__swbuf_r+0x32>
 8000762:	4621      	mov	r1, r4
 8000764:	4628      	mov	r0, r5
 8000766:	f000 f82b 	bl	80007c0 <__swsetup_r>
 800076a:	b118      	cbz	r0, 8000774 <__swbuf_r+0x32>
 800076c:	f04f 37ff 	mov.w	r7, #4294967295
 8000770:	4638      	mov	r0, r7
 8000772:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000774:	6823      	ldr	r3, [r4, #0]
 8000776:	6922      	ldr	r2, [r4, #16]
 8000778:	1a98      	subs	r0, r3, r2
 800077a:	6963      	ldr	r3, [r4, #20]
 800077c:	b2f6      	uxtb	r6, r6
 800077e:	4283      	cmp	r3, r0
 8000780:	4637      	mov	r7, r6
 8000782:	dc05      	bgt.n	8000790 <__swbuf_r+0x4e>
 8000784:	4621      	mov	r1, r4
 8000786:	4628      	mov	r0, r5
 8000788:	f000 fa68 	bl	8000c5c <_fflush_r>
 800078c:	2800      	cmp	r0, #0
 800078e:	d1ed      	bne.n	800076c <__swbuf_r+0x2a>
 8000790:	68a3      	ldr	r3, [r4, #8]
 8000792:	3b01      	subs	r3, #1
 8000794:	60a3      	str	r3, [r4, #8]
 8000796:	6823      	ldr	r3, [r4, #0]
 8000798:	1c5a      	adds	r2, r3, #1
 800079a:	6022      	str	r2, [r4, #0]
 800079c:	701e      	strb	r6, [r3, #0]
 800079e:	6962      	ldr	r2, [r4, #20]
 80007a0:	1c43      	adds	r3, r0, #1
 80007a2:	429a      	cmp	r2, r3
 80007a4:	d004      	beq.n	80007b0 <__swbuf_r+0x6e>
 80007a6:	89a3      	ldrh	r3, [r4, #12]
 80007a8:	07db      	lsls	r3, r3, #31
 80007aa:	d5e1      	bpl.n	8000770 <__swbuf_r+0x2e>
 80007ac:	2e0a      	cmp	r6, #10
 80007ae:	d1df      	bne.n	8000770 <__swbuf_r+0x2e>
 80007b0:	4621      	mov	r1, r4
 80007b2:	4628      	mov	r0, r5
 80007b4:	f000 fa52 	bl	8000c5c <_fflush_r>
 80007b8:	2800      	cmp	r0, #0
 80007ba:	d0d9      	beq.n	8000770 <__swbuf_r+0x2e>
 80007bc:	e7d6      	b.n	800076c <__swbuf_r+0x2a>
	...

080007c0 <__swsetup_r>:
 80007c0:	b538      	push	{r3, r4, r5, lr}
 80007c2:	4b29      	ldr	r3, [pc, #164]	@ (8000868 <__swsetup_r+0xa8>)
 80007c4:	4605      	mov	r5, r0
 80007c6:	6818      	ldr	r0, [r3, #0]
 80007c8:	460c      	mov	r4, r1
 80007ca:	b118      	cbz	r0, 80007d4 <__swsetup_r+0x14>
 80007cc:	6a03      	ldr	r3, [r0, #32]
 80007ce:	b90b      	cbnz	r3, 80007d4 <__swsetup_r+0x14>
 80007d0:	f7ff fee0 	bl	8000594 <__sinit>
 80007d4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007d8:	0719      	lsls	r1, r3, #28
 80007da:	d422      	bmi.n	8000822 <__swsetup_r+0x62>
 80007dc:	06da      	lsls	r2, r3, #27
 80007de:	d407      	bmi.n	80007f0 <__swsetup_r+0x30>
 80007e0:	2209      	movs	r2, #9
 80007e2:	602a      	str	r2, [r5, #0]
 80007e4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80007e8:	81a3      	strh	r3, [r4, #12]
 80007ea:	f04f 30ff 	mov.w	r0, #4294967295
 80007ee:	e033      	b.n	8000858 <__swsetup_r+0x98>
 80007f0:	0758      	lsls	r0, r3, #29
 80007f2:	d512      	bpl.n	800081a <__swsetup_r+0x5a>
 80007f4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80007f6:	b141      	cbz	r1, 800080a <__swsetup_r+0x4a>
 80007f8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80007fc:	4299      	cmp	r1, r3
 80007fe:	d002      	beq.n	8000806 <__swsetup_r+0x46>
 8000800:	4628      	mov	r0, r5
 8000802:	f000 f8af 	bl	8000964 <_free_r>
 8000806:	2300      	movs	r3, #0
 8000808:	6363      	str	r3, [r4, #52]	@ 0x34
 800080a:	89a3      	ldrh	r3, [r4, #12]
 800080c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8000810:	81a3      	strh	r3, [r4, #12]
 8000812:	2300      	movs	r3, #0
 8000814:	6063      	str	r3, [r4, #4]
 8000816:	6923      	ldr	r3, [r4, #16]
 8000818:	6023      	str	r3, [r4, #0]
 800081a:	89a3      	ldrh	r3, [r4, #12]
 800081c:	f043 0308 	orr.w	r3, r3, #8
 8000820:	81a3      	strh	r3, [r4, #12]
 8000822:	6923      	ldr	r3, [r4, #16]
 8000824:	b94b      	cbnz	r3, 800083a <__swsetup_r+0x7a>
 8000826:	89a3      	ldrh	r3, [r4, #12]
 8000828:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800082c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000830:	d003      	beq.n	800083a <__swsetup_r+0x7a>
 8000832:	4621      	mov	r1, r4
 8000834:	4628      	mov	r0, r5
 8000836:	f000 fa5f 	bl	8000cf8 <__smakebuf_r>
 800083a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800083e:	f013 0201 	ands.w	r2, r3, #1
 8000842:	d00a      	beq.n	800085a <__swsetup_r+0x9a>
 8000844:	2200      	movs	r2, #0
 8000846:	60a2      	str	r2, [r4, #8]
 8000848:	6962      	ldr	r2, [r4, #20]
 800084a:	4252      	negs	r2, r2
 800084c:	61a2      	str	r2, [r4, #24]
 800084e:	6922      	ldr	r2, [r4, #16]
 8000850:	b942      	cbnz	r2, 8000864 <__swsetup_r+0xa4>
 8000852:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8000856:	d1c5      	bne.n	80007e4 <__swsetup_r+0x24>
 8000858:	bd38      	pop	{r3, r4, r5, pc}
 800085a:	0799      	lsls	r1, r3, #30
 800085c:	bf58      	it	pl
 800085e:	6962      	ldrpl	r2, [r4, #20]
 8000860:	60a2      	str	r2, [r4, #8]
 8000862:	e7f4      	b.n	800084e <__swsetup_r+0x8e>
 8000864:	2000      	movs	r0, #0
 8000866:	e7f7      	b.n	8000858 <__swsetup_r+0x98>
 8000868:	20000028 	.word	0x20000028

0800086c <memset>:
 800086c:	4402      	add	r2, r0
 800086e:	4603      	mov	r3, r0
 8000870:	4293      	cmp	r3, r2
 8000872:	d100      	bne.n	8000876 <memset+0xa>
 8000874:	4770      	bx	lr
 8000876:	f803 1b01 	strb.w	r1, [r3], #1
 800087a:	e7f9      	b.n	8000870 <memset+0x4>

0800087c <_close_r>:
 800087c:	b538      	push	{r3, r4, r5, lr}
 800087e:	4d06      	ldr	r5, [pc, #24]	@ (8000898 <_close_r+0x1c>)
 8000880:	2300      	movs	r3, #0
 8000882:	4604      	mov	r4, r0
 8000884:	4608      	mov	r0, r1
 8000886:	602b      	str	r3, [r5, #0]
 8000888:	f7ff fd63 	bl	8000352 <_close>
 800088c:	1c43      	adds	r3, r0, #1
 800088e:	d102      	bne.n	8000896 <_close_r+0x1a>
 8000890:	682b      	ldr	r3, [r5, #0]
 8000892:	b103      	cbz	r3, 8000896 <_close_r+0x1a>
 8000894:	6023      	str	r3, [r4, #0]
 8000896:	bd38      	pop	{r3, r4, r5, pc}
 8000898:	200001d4 	.word	0x200001d4

0800089c <_lseek_r>:
 800089c:	b538      	push	{r3, r4, r5, lr}
 800089e:	4d07      	ldr	r5, [pc, #28]	@ (80008bc <_lseek_r+0x20>)
 80008a0:	4604      	mov	r4, r0
 80008a2:	4608      	mov	r0, r1
 80008a4:	4611      	mov	r1, r2
 80008a6:	2200      	movs	r2, #0
 80008a8:	602a      	str	r2, [r5, #0]
 80008aa:	461a      	mov	r2, r3
 80008ac:	f7ff fd78 	bl	80003a0 <_lseek>
 80008b0:	1c43      	adds	r3, r0, #1
 80008b2:	d102      	bne.n	80008ba <_lseek_r+0x1e>
 80008b4:	682b      	ldr	r3, [r5, #0]
 80008b6:	b103      	cbz	r3, 80008ba <_lseek_r+0x1e>
 80008b8:	6023      	str	r3, [r4, #0]
 80008ba:	bd38      	pop	{r3, r4, r5, pc}
 80008bc:	200001d4 	.word	0x200001d4

080008c0 <_read_r>:
 80008c0:	b538      	push	{r3, r4, r5, lr}
 80008c2:	4d07      	ldr	r5, [pc, #28]	@ (80008e0 <_read_r+0x20>)
 80008c4:	4604      	mov	r4, r0
 80008c6:	4608      	mov	r0, r1
 80008c8:	4611      	mov	r1, r2
 80008ca:	2200      	movs	r2, #0
 80008cc:	602a      	str	r2, [r5, #0]
 80008ce:	461a      	mov	r2, r3
 80008d0:	f7ff fd06 	bl	80002e0 <_read>
 80008d4:	1c43      	adds	r3, r0, #1
 80008d6:	d102      	bne.n	80008de <_read_r+0x1e>
 80008d8:	682b      	ldr	r3, [r5, #0]
 80008da:	b103      	cbz	r3, 80008de <_read_r+0x1e>
 80008dc:	6023      	str	r3, [r4, #0]
 80008de:	bd38      	pop	{r3, r4, r5, pc}
 80008e0:	200001d4 	.word	0x200001d4

080008e4 <_write_r>:
 80008e4:	b538      	push	{r3, r4, r5, lr}
 80008e6:	4d07      	ldr	r5, [pc, #28]	@ (8000904 <_write_r+0x20>)
 80008e8:	4604      	mov	r4, r0
 80008ea:	4608      	mov	r0, r1
 80008ec:	4611      	mov	r1, r2
 80008ee:	2200      	movs	r2, #0
 80008f0:	602a      	str	r2, [r5, #0]
 80008f2:	461a      	mov	r2, r3
 80008f4:	f7ff fd11 	bl	800031a <_write>
 80008f8:	1c43      	adds	r3, r0, #1
 80008fa:	d102      	bne.n	8000902 <_write_r+0x1e>
 80008fc:	682b      	ldr	r3, [r5, #0]
 80008fe:	b103      	cbz	r3, 8000902 <_write_r+0x1e>
 8000900:	6023      	str	r3, [r4, #0]
 8000902:	bd38      	pop	{r3, r4, r5, pc}
 8000904:	200001d4 	.word	0x200001d4

08000908 <__errno>:
 8000908:	4b01      	ldr	r3, [pc, #4]	@ (8000910 <__errno+0x8>)
 800090a:	6818      	ldr	r0, [r3, #0]
 800090c:	4770      	bx	lr
 800090e:	bf00      	nop
 8000910:	20000028 	.word	0x20000028

08000914 <__libc_init_array>:
 8000914:	b570      	push	{r4, r5, r6, lr}
 8000916:	4d0d      	ldr	r5, [pc, #52]	@ (800094c <__libc_init_array+0x38>)
 8000918:	4c0d      	ldr	r4, [pc, #52]	@ (8000950 <__libc_init_array+0x3c>)
 800091a:	1b64      	subs	r4, r4, r5
 800091c:	10a4      	asrs	r4, r4, #2
 800091e:	2600      	movs	r6, #0
 8000920:	42a6      	cmp	r6, r4
 8000922:	d109      	bne.n	8000938 <__libc_init_array+0x24>
 8000924:	4d0b      	ldr	r5, [pc, #44]	@ (8000954 <__libc_init_array+0x40>)
 8000926:	4c0c      	ldr	r4, [pc, #48]	@ (8000958 <__libc_init_array+0x44>)
 8000928:	f000 fa54 	bl	8000dd4 <_init>
 800092c:	1b64      	subs	r4, r4, r5
 800092e:	10a4      	asrs	r4, r4, #2
 8000930:	2600      	movs	r6, #0
 8000932:	42a6      	cmp	r6, r4
 8000934:	d105      	bne.n	8000942 <__libc_init_array+0x2e>
 8000936:	bd70      	pop	{r4, r5, r6, pc}
 8000938:	f855 3b04 	ldr.w	r3, [r5], #4
 800093c:	4798      	blx	r3
 800093e:	3601      	adds	r6, #1
 8000940:	e7ee      	b.n	8000920 <__libc_init_array+0xc>
 8000942:	f855 3b04 	ldr.w	r3, [r5], #4
 8000946:	4798      	blx	r3
 8000948:	3601      	adds	r6, #1
 800094a:	e7f2      	b.n	8000932 <__libc_init_array+0x1e>
 800094c:	08000e00 	.word	0x08000e00
 8000950:	08000e00 	.word	0x08000e00
 8000954:	08000e00 	.word	0x08000e00
 8000958:	08000e04 	.word	0x08000e04

0800095c <__retarget_lock_init_recursive>:
 800095c:	4770      	bx	lr

0800095e <__retarget_lock_acquire_recursive>:
 800095e:	4770      	bx	lr

08000960 <__retarget_lock_release_recursive>:
 8000960:	4770      	bx	lr
	...

08000964 <_free_r>:
 8000964:	b538      	push	{r3, r4, r5, lr}
 8000966:	4605      	mov	r5, r0
 8000968:	2900      	cmp	r1, #0
 800096a:	d041      	beq.n	80009f0 <_free_r+0x8c>
 800096c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000970:	1f0c      	subs	r4, r1, #4
 8000972:	2b00      	cmp	r3, #0
 8000974:	bfb8      	it	lt
 8000976:	18e4      	addlt	r4, r4, r3
 8000978:	f000 f8e0 	bl	8000b3c <__malloc_lock>
 800097c:	4a1d      	ldr	r2, [pc, #116]	@ (80009f4 <_free_r+0x90>)
 800097e:	6813      	ldr	r3, [r2, #0]
 8000980:	b933      	cbnz	r3, 8000990 <_free_r+0x2c>
 8000982:	6063      	str	r3, [r4, #4]
 8000984:	6014      	str	r4, [r2, #0]
 8000986:	4628      	mov	r0, r5
 8000988:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800098c:	f000 b8dc 	b.w	8000b48 <__malloc_unlock>
 8000990:	42a3      	cmp	r3, r4
 8000992:	d908      	bls.n	80009a6 <_free_r+0x42>
 8000994:	6820      	ldr	r0, [r4, #0]
 8000996:	1821      	adds	r1, r4, r0
 8000998:	428b      	cmp	r3, r1
 800099a:	bf01      	itttt	eq
 800099c:	6819      	ldreq	r1, [r3, #0]
 800099e:	685b      	ldreq	r3, [r3, #4]
 80009a0:	1809      	addeq	r1, r1, r0
 80009a2:	6021      	streq	r1, [r4, #0]
 80009a4:	e7ed      	b.n	8000982 <_free_r+0x1e>
 80009a6:	461a      	mov	r2, r3
 80009a8:	685b      	ldr	r3, [r3, #4]
 80009aa:	b10b      	cbz	r3, 80009b0 <_free_r+0x4c>
 80009ac:	42a3      	cmp	r3, r4
 80009ae:	d9fa      	bls.n	80009a6 <_free_r+0x42>
 80009b0:	6811      	ldr	r1, [r2, #0]
 80009b2:	1850      	adds	r0, r2, r1
 80009b4:	42a0      	cmp	r0, r4
 80009b6:	d10b      	bne.n	80009d0 <_free_r+0x6c>
 80009b8:	6820      	ldr	r0, [r4, #0]
 80009ba:	4401      	add	r1, r0
 80009bc:	1850      	adds	r0, r2, r1
 80009be:	4283      	cmp	r3, r0
 80009c0:	6011      	str	r1, [r2, #0]
 80009c2:	d1e0      	bne.n	8000986 <_free_r+0x22>
 80009c4:	6818      	ldr	r0, [r3, #0]
 80009c6:	685b      	ldr	r3, [r3, #4]
 80009c8:	6053      	str	r3, [r2, #4]
 80009ca:	4408      	add	r0, r1
 80009cc:	6010      	str	r0, [r2, #0]
 80009ce:	e7da      	b.n	8000986 <_free_r+0x22>
 80009d0:	d902      	bls.n	80009d8 <_free_r+0x74>
 80009d2:	230c      	movs	r3, #12
 80009d4:	602b      	str	r3, [r5, #0]
 80009d6:	e7d6      	b.n	8000986 <_free_r+0x22>
 80009d8:	6820      	ldr	r0, [r4, #0]
 80009da:	1821      	adds	r1, r4, r0
 80009dc:	428b      	cmp	r3, r1
 80009de:	bf04      	itt	eq
 80009e0:	6819      	ldreq	r1, [r3, #0]
 80009e2:	685b      	ldreq	r3, [r3, #4]
 80009e4:	6063      	str	r3, [r4, #4]
 80009e6:	bf04      	itt	eq
 80009e8:	1809      	addeq	r1, r1, r0
 80009ea:	6021      	streq	r1, [r4, #0]
 80009ec:	6054      	str	r4, [r2, #4]
 80009ee:	e7ca      	b.n	8000986 <_free_r+0x22>
 80009f0:	bd38      	pop	{r3, r4, r5, pc}
 80009f2:	bf00      	nop
 80009f4:	200001e0 	.word	0x200001e0

080009f8 <sbrk_aligned>:
 80009f8:	b570      	push	{r4, r5, r6, lr}
 80009fa:	4e0f      	ldr	r6, [pc, #60]	@ (8000a38 <sbrk_aligned+0x40>)
 80009fc:	460c      	mov	r4, r1
 80009fe:	6831      	ldr	r1, [r6, #0]
 8000a00:	4605      	mov	r5, r0
 8000a02:	b911      	cbnz	r1, 8000a0a <sbrk_aligned+0x12>
 8000a04:	f000 f9d6 	bl	8000db4 <_sbrk_r>
 8000a08:	6030      	str	r0, [r6, #0]
 8000a0a:	4621      	mov	r1, r4
 8000a0c:	4628      	mov	r0, r5
 8000a0e:	f000 f9d1 	bl	8000db4 <_sbrk_r>
 8000a12:	1c43      	adds	r3, r0, #1
 8000a14:	d103      	bne.n	8000a1e <sbrk_aligned+0x26>
 8000a16:	f04f 34ff 	mov.w	r4, #4294967295
 8000a1a:	4620      	mov	r0, r4
 8000a1c:	bd70      	pop	{r4, r5, r6, pc}
 8000a1e:	1cc4      	adds	r4, r0, #3
 8000a20:	f024 0403 	bic.w	r4, r4, #3
 8000a24:	42a0      	cmp	r0, r4
 8000a26:	d0f8      	beq.n	8000a1a <sbrk_aligned+0x22>
 8000a28:	1a21      	subs	r1, r4, r0
 8000a2a:	4628      	mov	r0, r5
 8000a2c:	f000 f9c2 	bl	8000db4 <_sbrk_r>
 8000a30:	3001      	adds	r0, #1
 8000a32:	d1f2      	bne.n	8000a1a <sbrk_aligned+0x22>
 8000a34:	e7ef      	b.n	8000a16 <sbrk_aligned+0x1e>
 8000a36:	bf00      	nop
 8000a38:	200001dc 	.word	0x200001dc

08000a3c <_malloc_r>:
 8000a3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a40:	1ccd      	adds	r5, r1, #3
 8000a42:	f025 0503 	bic.w	r5, r5, #3
 8000a46:	3508      	adds	r5, #8
 8000a48:	2d0c      	cmp	r5, #12
 8000a4a:	bf38      	it	cc
 8000a4c:	250c      	movcc	r5, #12
 8000a4e:	2d00      	cmp	r5, #0
 8000a50:	4606      	mov	r6, r0
 8000a52:	db01      	blt.n	8000a58 <_malloc_r+0x1c>
 8000a54:	42a9      	cmp	r1, r5
 8000a56:	d904      	bls.n	8000a62 <_malloc_r+0x26>
 8000a58:	230c      	movs	r3, #12
 8000a5a:	6033      	str	r3, [r6, #0]
 8000a5c:	2000      	movs	r0, #0
 8000a5e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a62:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000b38 <_malloc_r+0xfc>
 8000a66:	f000 f869 	bl	8000b3c <__malloc_lock>
 8000a6a:	f8d8 3000 	ldr.w	r3, [r8]
 8000a6e:	461c      	mov	r4, r3
 8000a70:	bb44      	cbnz	r4, 8000ac4 <_malloc_r+0x88>
 8000a72:	4629      	mov	r1, r5
 8000a74:	4630      	mov	r0, r6
 8000a76:	f7ff ffbf 	bl	80009f8 <sbrk_aligned>
 8000a7a:	1c43      	adds	r3, r0, #1
 8000a7c:	4604      	mov	r4, r0
 8000a7e:	d158      	bne.n	8000b32 <_malloc_r+0xf6>
 8000a80:	f8d8 4000 	ldr.w	r4, [r8]
 8000a84:	4627      	mov	r7, r4
 8000a86:	2f00      	cmp	r7, #0
 8000a88:	d143      	bne.n	8000b12 <_malloc_r+0xd6>
 8000a8a:	2c00      	cmp	r4, #0
 8000a8c:	d04b      	beq.n	8000b26 <_malloc_r+0xea>
 8000a8e:	6823      	ldr	r3, [r4, #0]
 8000a90:	4639      	mov	r1, r7
 8000a92:	4630      	mov	r0, r6
 8000a94:	eb04 0903 	add.w	r9, r4, r3
 8000a98:	f000 f98c 	bl	8000db4 <_sbrk_r>
 8000a9c:	4581      	cmp	r9, r0
 8000a9e:	d142      	bne.n	8000b26 <_malloc_r+0xea>
 8000aa0:	6821      	ldr	r1, [r4, #0]
 8000aa2:	1a6d      	subs	r5, r5, r1
 8000aa4:	4629      	mov	r1, r5
 8000aa6:	4630      	mov	r0, r6
 8000aa8:	f7ff ffa6 	bl	80009f8 <sbrk_aligned>
 8000aac:	3001      	adds	r0, #1
 8000aae:	d03a      	beq.n	8000b26 <_malloc_r+0xea>
 8000ab0:	6823      	ldr	r3, [r4, #0]
 8000ab2:	442b      	add	r3, r5
 8000ab4:	6023      	str	r3, [r4, #0]
 8000ab6:	f8d8 3000 	ldr.w	r3, [r8]
 8000aba:	685a      	ldr	r2, [r3, #4]
 8000abc:	bb62      	cbnz	r2, 8000b18 <_malloc_r+0xdc>
 8000abe:	f8c8 7000 	str.w	r7, [r8]
 8000ac2:	e00f      	b.n	8000ae4 <_malloc_r+0xa8>
 8000ac4:	6822      	ldr	r2, [r4, #0]
 8000ac6:	1b52      	subs	r2, r2, r5
 8000ac8:	d420      	bmi.n	8000b0c <_malloc_r+0xd0>
 8000aca:	2a0b      	cmp	r2, #11
 8000acc:	d917      	bls.n	8000afe <_malloc_r+0xc2>
 8000ace:	1961      	adds	r1, r4, r5
 8000ad0:	42a3      	cmp	r3, r4
 8000ad2:	6025      	str	r5, [r4, #0]
 8000ad4:	bf18      	it	ne
 8000ad6:	6059      	strne	r1, [r3, #4]
 8000ad8:	6863      	ldr	r3, [r4, #4]
 8000ada:	bf08      	it	eq
 8000adc:	f8c8 1000 	streq.w	r1, [r8]
 8000ae0:	5162      	str	r2, [r4, r5]
 8000ae2:	604b      	str	r3, [r1, #4]
 8000ae4:	4630      	mov	r0, r6
 8000ae6:	f000 f82f 	bl	8000b48 <__malloc_unlock>
 8000aea:	f104 000b 	add.w	r0, r4, #11
 8000aee:	1d23      	adds	r3, r4, #4
 8000af0:	f020 0007 	bic.w	r0, r0, #7
 8000af4:	1ac2      	subs	r2, r0, r3
 8000af6:	bf1c      	itt	ne
 8000af8:	1a1b      	subne	r3, r3, r0
 8000afa:	50a3      	strne	r3, [r4, r2]
 8000afc:	e7af      	b.n	8000a5e <_malloc_r+0x22>
 8000afe:	6862      	ldr	r2, [r4, #4]
 8000b00:	42a3      	cmp	r3, r4
 8000b02:	bf0c      	ite	eq
 8000b04:	f8c8 2000 	streq.w	r2, [r8]
 8000b08:	605a      	strne	r2, [r3, #4]
 8000b0a:	e7eb      	b.n	8000ae4 <_malloc_r+0xa8>
 8000b0c:	4623      	mov	r3, r4
 8000b0e:	6864      	ldr	r4, [r4, #4]
 8000b10:	e7ae      	b.n	8000a70 <_malloc_r+0x34>
 8000b12:	463c      	mov	r4, r7
 8000b14:	687f      	ldr	r7, [r7, #4]
 8000b16:	e7b6      	b.n	8000a86 <_malloc_r+0x4a>
 8000b18:	461a      	mov	r2, r3
 8000b1a:	685b      	ldr	r3, [r3, #4]
 8000b1c:	42a3      	cmp	r3, r4
 8000b1e:	d1fb      	bne.n	8000b18 <_malloc_r+0xdc>
 8000b20:	2300      	movs	r3, #0
 8000b22:	6053      	str	r3, [r2, #4]
 8000b24:	e7de      	b.n	8000ae4 <_malloc_r+0xa8>
 8000b26:	230c      	movs	r3, #12
 8000b28:	6033      	str	r3, [r6, #0]
 8000b2a:	4630      	mov	r0, r6
 8000b2c:	f000 f80c 	bl	8000b48 <__malloc_unlock>
 8000b30:	e794      	b.n	8000a5c <_malloc_r+0x20>
 8000b32:	6005      	str	r5, [r0, #0]
 8000b34:	e7d6      	b.n	8000ae4 <_malloc_r+0xa8>
 8000b36:	bf00      	nop
 8000b38:	200001e0 	.word	0x200001e0

08000b3c <__malloc_lock>:
 8000b3c:	4801      	ldr	r0, [pc, #4]	@ (8000b44 <__malloc_lock+0x8>)
 8000b3e:	f7ff bf0e 	b.w	800095e <__retarget_lock_acquire_recursive>
 8000b42:	bf00      	nop
 8000b44:	200001d8 	.word	0x200001d8

08000b48 <__malloc_unlock>:
 8000b48:	4801      	ldr	r0, [pc, #4]	@ (8000b50 <__malloc_unlock+0x8>)
 8000b4a:	f7ff bf09 	b.w	8000960 <__retarget_lock_release_recursive>
 8000b4e:	bf00      	nop
 8000b50:	200001d8 	.word	0x200001d8

08000b54 <__sflush_r>:
 8000b54:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000b58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000b5c:	0716      	lsls	r6, r2, #28
 8000b5e:	4605      	mov	r5, r0
 8000b60:	460c      	mov	r4, r1
 8000b62:	d454      	bmi.n	8000c0e <__sflush_r+0xba>
 8000b64:	684b      	ldr	r3, [r1, #4]
 8000b66:	2b00      	cmp	r3, #0
 8000b68:	dc02      	bgt.n	8000b70 <__sflush_r+0x1c>
 8000b6a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000b6c:	2b00      	cmp	r3, #0
 8000b6e:	dd48      	ble.n	8000c02 <__sflush_r+0xae>
 8000b70:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000b72:	2e00      	cmp	r6, #0
 8000b74:	d045      	beq.n	8000c02 <__sflush_r+0xae>
 8000b76:	2300      	movs	r3, #0
 8000b78:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000b7c:	682f      	ldr	r7, [r5, #0]
 8000b7e:	6a21      	ldr	r1, [r4, #32]
 8000b80:	602b      	str	r3, [r5, #0]
 8000b82:	d030      	beq.n	8000be6 <__sflush_r+0x92>
 8000b84:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000b86:	89a3      	ldrh	r3, [r4, #12]
 8000b88:	0759      	lsls	r1, r3, #29
 8000b8a:	d505      	bpl.n	8000b98 <__sflush_r+0x44>
 8000b8c:	6863      	ldr	r3, [r4, #4]
 8000b8e:	1ad2      	subs	r2, r2, r3
 8000b90:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000b92:	b10b      	cbz	r3, 8000b98 <__sflush_r+0x44>
 8000b94:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000b96:	1ad2      	subs	r2, r2, r3
 8000b98:	2300      	movs	r3, #0
 8000b9a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000b9c:	6a21      	ldr	r1, [r4, #32]
 8000b9e:	4628      	mov	r0, r5
 8000ba0:	47b0      	blx	r6
 8000ba2:	1c43      	adds	r3, r0, #1
 8000ba4:	89a3      	ldrh	r3, [r4, #12]
 8000ba6:	d106      	bne.n	8000bb6 <__sflush_r+0x62>
 8000ba8:	6829      	ldr	r1, [r5, #0]
 8000baa:	291d      	cmp	r1, #29
 8000bac:	d82b      	bhi.n	8000c06 <__sflush_r+0xb2>
 8000bae:	4a2a      	ldr	r2, [pc, #168]	@ (8000c58 <__sflush_r+0x104>)
 8000bb0:	410a      	asrs	r2, r1
 8000bb2:	07d6      	lsls	r6, r2, #31
 8000bb4:	d427      	bmi.n	8000c06 <__sflush_r+0xb2>
 8000bb6:	2200      	movs	r2, #0
 8000bb8:	6062      	str	r2, [r4, #4]
 8000bba:	04d9      	lsls	r1, r3, #19
 8000bbc:	6922      	ldr	r2, [r4, #16]
 8000bbe:	6022      	str	r2, [r4, #0]
 8000bc0:	d504      	bpl.n	8000bcc <__sflush_r+0x78>
 8000bc2:	1c42      	adds	r2, r0, #1
 8000bc4:	d101      	bne.n	8000bca <__sflush_r+0x76>
 8000bc6:	682b      	ldr	r3, [r5, #0]
 8000bc8:	b903      	cbnz	r3, 8000bcc <__sflush_r+0x78>
 8000bca:	6560      	str	r0, [r4, #84]	@ 0x54
 8000bcc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000bce:	602f      	str	r7, [r5, #0]
 8000bd0:	b1b9      	cbz	r1, 8000c02 <__sflush_r+0xae>
 8000bd2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000bd6:	4299      	cmp	r1, r3
 8000bd8:	d002      	beq.n	8000be0 <__sflush_r+0x8c>
 8000bda:	4628      	mov	r0, r5
 8000bdc:	f7ff fec2 	bl	8000964 <_free_r>
 8000be0:	2300      	movs	r3, #0
 8000be2:	6363      	str	r3, [r4, #52]	@ 0x34
 8000be4:	e00d      	b.n	8000c02 <__sflush_r+0xae>
 8000be6:	2301      	movs	r3, #1
 8000be8:	4628      	mov	r0, r5
 8000bea:	47b0      	blx	r6
 8000bec:	4602      	mov	r2, r0
 8000bee:	1c50      	adds	r0, r2, #1
 8000bf0:	d1c9      	bne.n	8000b86 <__sflush_r+0x32>
 8000bf2:	682b      	ldr	r3, [r5, #0]
 8000bf4:	2b00      	cmp	r3, #0
 8000bf6:	d0c6      	beq.n	8000b86 <__sflush_r+0x32>
 8000bf8:	2b1d      	cmp	r3, #29
 8000bfa:	d001      	beq.n	8000c00 <__sflush_r+0xac>
 8000bfc:	2b16      	cmp	r3, #22
 8000bfe:	d11e      	bne.n	8000c3e <__sflush_r+0xea>
 8000c00:	602f      	str	r7, [r5, #0]
 8000c02:	2000      	movs	r0, #0
 8000c04:	e022      	b.n	8000c4c <__sflush_r+0xf8>
 8000c06:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000c0a:	b21b      	sxth	r3, r3
 8000c0c:	e01b      	b.n	8000c46 <__sflush_r+0xf2>
 8000c0e:	690f      	ldr	r7, [r1, #16]
 8000c10:	2f00      	cmp	r7, #0
 8000c12:	d0f6      	beq.n	8000c02 <__sflush_r+0xae>
 8000c14:	0793      	lsls	r3, r2, #30
 8000c16:	680e      	ldr	r6, [r1, #0]
 8000c18:	bf08      	it	eq
 8000c1a:	694b      	ldreq	r3, [r1, #20]
 8000c1c:	600f      	str	r7, [r1, #0]
 8000c1e:	bf18      	it	ne
 8000c20:	2300      	movne	r3, #0
 8000c22:	eba6 0807 	sub.w	r8, r6, r7
 8000c26:	608b      	str	r3, [r1, #8]
 8000c28:	f1b8 0f00 	cmp.w	r8, #0
 8000c2c:	dde9      	ble.n	8000c02 <__sflush_r+0xae>
 8000c2e:	6a21      	ldr	r1, [r4, #32]
 8000c30:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8000c32:	4643      	mov	r3, r8
 8000c34:	463a      	mov	r2, r7
 8000c36:	4628      	mov	r0, r5
 8000c38:	47b0      	blx	r6
 8000c3a:	2800      	cmp	r0, #0
 8000c3c:	dc08      	bgt.n	8000c50 <__sflush_r+0xfc>
 8000c3e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c42:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000c46:	81a3      	strh	r3, [r4, #12]
 8000c48:	f04f 30ff 	mov.w	r0, #4294967295
 8000c4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000c50:	4407      	add	r7, r0
 8000c52:	eba8 0800 	sub.w	r8, r8, r0
 8000c56:	e7e7      	b.n	8000c28 <__sflush_r+0xd4>
 8000c58:	dfbffffe 	.word	0xdfbffffe

08000c5c <_fflush_r>:
 8000c5c:	b538      	push	{r3, r4, r5, lr}
 8000c5e:	690b      	ldr	r3, [r1, #16]
 8000c60:	4605      	mov	r5, r0
 8000c62:	460c      	mov	r4, r1
 8000c64:	b913      	cbnz	r3, 8000c6c <_fflush_r+0x10>
 8000c66:	2500      	movs	r5, #0
 8000c68:	4628      	mov	r0, r5
 8000c6a:	bd38      	pop	{r3, r4, r5, pc}
 8000c6c:	b118      	cbz	r0, 8000c76 <_fflush_r+0x1a>
 8000c6e:	6a03      	ldr	r3, [r0, #32]
 8000c70:	b90b      	cbnz	r3, 8000c76 <_fflush_r+0x1a>
 8000c72:	f7ff fc8f 	bl	8000594 <__sinit>
 8000c76:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c7a:	2b00      	cmp	r3, #0
 8000c7c:	d0f3      	beq.n	8000c66 <_fflush_r+0xa>
 8000c7e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8000c80:	07d0      	lsls	r0, r2, #31
 8000c82:	d404      	bmi.n	8000c8e <_fflush_r+0x32>
 8000c84:	0599      	lsls	r1, r3, #22
 8000c86:	d402      	bmi.n	8000c8e <_fflush_r+0x32>
 8000c88:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000c8a:	f7ff fe68 	bl	800095e <__retarget_lock_acquire_recursive>
 8000c8e:	4628      	mov	r0, r5
 8000c90:	4621      	mov	r1, r4
 8000c92:	f7ff ff5f 	bl	8000b54 <__sflush_r>
 8000c96:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000c98:	07da      	lsls	r2, r3, #31
 8000c9a:	4605      	mov	r5, r0
 8000c9c:	d4e4      	bmi.n	8000c68 <_fflush_r+0xc>
 8000c9e:	89a3      	ldrh	r3, [r4, #12]
 8000ca0:	059b      	lsls	r3, r3, #22
 8000ca2:	d4e1      	bmi.n	8000c68 <_fflush_r+0xc>
 8000ca4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000ca6:	f7ff fe5b 	bl	8000960 <__retarget_lock_release_recursive>
 8000caa:	e7dd      	b.n	8000c68 <_fflush_r+0xc>

08000cac <__swhatbuf_r>:
 8000cac:	b570      	push	{r4, r5, r6, lr}
 8000cae:	460c      	mov	r4, r1
 8000cb0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cb4:	2900      	cmp	r1, #0
 8000cb6:	b096      	sub	sp, #88	@ 0x58
 8000cb8:	4615      	mov	r5, r2
 8000cba:	461e      	mov	r6, r3
 8000cbc:	da0d      	bge.n	8000cda <__swhatbuf_r+0x2e>
 8000cbe:	89a3      	ldrh	r3, [r4, #12]
 8000cc0:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8000cc4:	f04f 0100 	mov.w	r1, #0
 8000cc8:	bf14      	ite	ne
 8000cca:	2340      	movne	r3, #64	@ 0x40
 8000ccc:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8000cd0:	2000      	movs	r0, #0
 8000cd2:	6031      	str	r1, [r6, #0]
 8000cd4:	602b      	str	r3, [r5, #0]
 8000cd6:	b016      	add	sp, #88	@ 0x58
 8000cd8:	bd70      	pop	{r4, r5, r6, pc}
 8000cda:	466a      	mov	r2, sp
 8000cdc:	f000 f848 	bl	8000d70 <_fstat_r>
 8000ce0:	2800      	cmp	r0, #0
 8000ce2:	dbec      	blt.n	8000cbe <__swhatbuf_r+0x12>
 8000ce4:	9901      	ldr	r1, [sp, #4]
 8000ce6:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8000cea:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8000cee:	4259      	negs	r1, r3
 8000cf0:	4159      	adcs	r1, r3
 8000cf2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000cf6:	e7eb      	b.n	8000cd0 <__swhatbuf_r+0x24>

08000cf8 <__smakebuf_r>:
 8000cf8:	898b      	ldrh	r3, [r1, #12]
 8000cfa:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000cfc:	079d      	lsls	r5, r3, #30
 8000cfe:	4606      	mov	r6, r0
 8000d00:	460c      	mov	r4, r1
 8000d02:	d507      	bpl.n	8000d14 <__smakebuf_r+0x1c>
 8000d04:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8000d08:	6023      	str	r3, [r4, #0]
 8000d0a:	6123      	str	r3, [r4, #16]
 8000d0c:	2301      	movs	r3, #1
 8000d0e:	6163      	str	r3, [r4, #20]
 8000d10:	b003      	add	sp, #12
 8000d12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d14:	ab01      	add	r3, sp, #4
 8000d16:	466a      	mov	r2, sp
 8000d18:	f7ff ffc8 	bl	8000cac <__swhatbuf_r>
 8000d1c:	9f00      	ldr	r7, [sp, #0]
 8000d1e:	4605      	mov	r5, r0
 8000d20:	4639      	mov	r1, r7
 8000d22:	4630      	mov	r0, r6
 8000d24:	f7ff fe8a 	bl	8000a3c <_malloc_r>
 8000d28:	b948      	cbnz	r0, 8000d3e <__smakebuf_r+0x46>
 8000d2a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000d2e:	059a      	lsls	r2, r3, #22
 8000d30:	d4ee      	bmi.n	8000d10 <__smakebuf_r+0x18>
 8000d32:	f023 0303 	bic.w	r3, r3, #3
 8000d36:	f043 0302 	orr.w	r3, r3, #2
 8000d3a:	81a3      	strh	r3, [r4, #12]
 8000d3c:	e7e2      	b.n	8000d04 <__smakebuf_r+0xc>
 8000d3e:	89a3      	ldrh	r3, [r4, #12]
 8000d40:	6020      	str	r0, [r4, #0]
 8000d42:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000d46:	81a3      	strh	r3, [r4, #12]
 8000d48:	9b01      	ldr	r3, [sp, #4]
 8000d4a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8000d4e:	b15b      	cbz	r3, 8000d68 <__smakebuf_r+0x70>
 8000d50:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000d54:	4630      	mov	r0, r6
 8000d56:	f000 f81d 	bl	8000d94 <_isatty_r>
 8000d5a:	b128      	cbz	r0, 8000d68 <__smakebuf_r+0x70>
 8000d5c:	89a3      	ldrh	r3, [r4, #12]
 8000d5e:	f023 0303 	bic.w	r3, r3, #3
 8000d62:	f043 0301 	orr.w	r3, r3, #1
 8000d66:	81a3      	strh	r3, [r4, #12]
 8000d68:	89a3      	ldrh	r3, [r4, #12]
 8000d6a:	431d      	orrs	r5, r3
 8000d6c:	81a5      	strh	r5, [r4, #12]
 8000d6e:	e7cf      	b.n	8000d10 <__smakebuf_r+0x18>

08000d70 <_fstat_r>:
 8000d70:	b538      	push	{r3, r4, r5, lr}
 8000d72:	4d07      	ldr	r5, [pc, #28]	@ (8000d90 <_fstat_r+0x20>)
 8000d74:	2300      	movs	r3, #0
 8000d76:	4604      	mov	r4, r0
 8000d78:	4608      	mov	r0, r1
 8000d7a:	4611      	mov	r1, r2
 8000d7c:	602b      	str	r3, [r5, #0]
 8000d7e:	f7ff faf4 	bl	800036a <_fstat>
 8000d82:	1c43      	adds	r3, r0, #1
 8000d84:	d102      	bne.n	8000d8c <_fstat_r+0x1c>
 8000d86:	682b      	ldr	r3, [r5, #0]
 8000d88:	b103      	cbz	r3, 8000d8c <_fstat_r+0x1c>
 8000d8a:	6023      	str	r3, [r4, #0]
 8000d8c:	bd38      	pop	{r3, r4, r5, pc}
 8000d8e:	bf00      	nop
 8000d90:	200001d4 	.word	0x200001d4

08000d94 <_isatty_r>:
 8000d94:	b538      	push	{r3, r4, r5, lr}
 8000d96:	4d06      	ldr	r5, [pc, #24]	@ (8000db0 <_isatty_r+0x1c>)
 8000d98:	2300      	movs	r3, #0
 8000d9a:	4604      	mov	r4, r0
 8000d9c:	4608      	mov	r0, r1
 8000d9e:	602b      	str	r3, [r5, #0]
 8000da0:	f7ff faf3 	bl	800038a <_isatty>
 8000da4:	1c43      	adds	r3, r0, #1
 8000da6:	d102      	bne.n	8000dae <_isatty_r+0x1a>
 8000da8:	682b      	ldr	r3, [r5, #0]
 8000daa:	b103      	cbz	r3, 8000dae <_isatty_r+0x1a>
 8000dac:	6023      	str	r3, [r4, #0]
 8000dae:	bd38      	pop	{r3, r4, r5, pc}
 8000db0:	200001d4 	.word	0x200001d4

08000db4 <_sbrk_r>:
 8000db4:	b538      	push	{r3, r4, r5, lr}
 8000db6:	4d06      	ldr	r5, [pc, #24]	@ (8000dd0 <_sbrk_r+0x1c>)
 8000db8:	2300      	movs	r3, #0
 8000dba:	4604      	mov	r4, r0
 8000dbc:	4608      	mov	r0, r1
 8000dbe:	602b      	str	r3, [r5, #0]
 8000dc0:	f7ff fafc 	bl	80003bc <_sbrk>
 8000dc4:	1c43      	adds	r3, r0, #1
 8000dc6:	d102      	bne.n	8000dce <_sbrk_r+0x1a>
 8000dc8:	682b      	ldr	r3, [r5, #0]
 8000dca:	b103      	cbz	r3, 8000dce <_sbrk_r+0x1a>
 8000dcc:	6023      	str	r3, [r4, #0]
 8000dce:	bd38      	pop	{r3, r4, r5, pc}
 8000dd0:	200001d4 	.word	0x200001d4

08000dd4 <_init>:
 8000dd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dd6:	bf00      	nop
 8000dd8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000dda:	bc08      	pop	{r3}
 8000ddc:	469e      	mov	lr, r3
 8000dde:	4770      	bx	lr

08000de0 <_fini>:
 8000de0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000de2:	bf00      	nop
 8000de4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000de6:	bc08      	pop	{r3}
 8000de8:	469e      	mov	lr, r3
 8000dea:	4770      	bx	lr
