
adc.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012b4  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000060  08001454  08001454  00002454  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080014b4  080014b4  00003078  2**0
                  CONTENTS
  4 .ARM          00000008  080014b4  080014b4  000024b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080014bc  080014bc  00003078  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080014bc  080014bc  000024bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080014c0  080014c0  000024c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000078  20000000  080014c4  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000170  20000078  0800153c  00003078  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001e8  0800153c  000031e8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00003078  2**0
                  CONTENTS, READONLY
 12 .debug_info   000009ee  00000000  00000000  000030a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000037e  00000000  00000000  00003a96  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000120  00000000  00000000  00003e18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000c4  00000000  00000000  00003f38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002cbe  00000000  00000000  00003ffc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000149a  00000000  00000000  00006cba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009787  00000000  00000000  00008154  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000118db  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b64  00000000  00000000  00011920  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000053  00000000  00000000  00012484  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000078 	.word	0x20000078
 80001bc:	00000000 	.word	0x00000000
 80001c0:	0800143c 	.word	0x0800143c

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	2000007c 	.word	0x2000007c
 80001dc:	0800143c 	.word	0x0800143c

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <ADC_Init>:
uint32_t *pADC_SQR3 = (uint32_t*) 0x40012034;
uint32_t *pADC_DR = (uint32_t*) 0x4001204c;
uint16_t analogValue;
void ADC_Init();
void delay();
void ADC_Init() {
 8000280:	b480      	push	{r7}
 8000282:	af00      	add	r7, sp, #0
	*pAHB1ENR |= 1; //enable the clock access for GPIOA
 8000284:	4b16      	ldr	r3, [pc, #88]	@ (80002e0 <ADC_Init+0x60>)
 8000286:	681b      	ldr	r3, [r3, #0]
 8000288:	681a      	ldr	r2, [r3, #0]
 800028a:	4b15      	ldr	r3, [pc, #84]	@ (80002e0 <ADC_Init+0x60>)
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	f042 0201 	orr.w	r2, r2, #1
 8000292:	601a      	str	r2, [r3, #0]
	*pAPB2ENR |= 0X100; //enable the clock access for ADC1
 8000294:	4b13      	ldr	r3, [pc, #76]	@ (80002e4 <ADC_Init+0x64>)
 8000296:	681b      	ldr	r3, [r3, #0]
 8000298:	681a      	ldr	r2, [r3, #0]
 800029a:	4b12      	ldr	r3, [pc, #72]	@ (80002e4 <ADC_Init+0x64>)
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80002a2:	601a      	str	r2, [r3, #0]
	*pGIPOMODER |= 0XC; //CONFIGURE GPIOA FOR ANALOG
 80002a4:	4b10      	ldr	r3, [pc, #64]	@ (80002e8 <ADC_Init+0x68>)
 80002a6:	681b      	ldr	r3, [r3, #0]
 80002a8:	681a      	ldr	r2, [r3, #0]
 80002aa:	4b0f      	ldr	r3, [pc, #60]	@ (80002e8 <ADC_Init+0x68>)
 80002ac:	681b      	ldr	r3, [r3, #0]
 80002ae:	f042 020c 	orr.w	r2, r2, #12
 80002b2:	601a      	str	r2, [r3, #0]
	*pADC_CR2 = 0;
 80002b4:	4b0d      	ldr	r3, [pc, #52]	@ (80002ec <ADC_Init+0x6c>)
 80002b6:	681b      	ldr	r3, [r3, #0]
 80002b8:	2200      	movs	r2, #0
 80002ba:	601a      	str	r2, [r3, #0]
	*pADC_SQR3 = 1;
 80002bc:	4b0c      	ldr	r3, [pc, #48]	@ (80002f0 <ADC_Init+0x70>)
 80002be:	681b      	ldr	r3, [r3, #0]
 80002c0:	2201      	movs	r2, #1
 80002c2:	601a      	str	r2, [r3, #0]
	*pADC_CR2 |= 1;
 80002c4:	4b09      	ldr	r3, [pc, #36]	@ (80002ec <ADC_Init+0x6c>)
 80002c6:	681b      	ldr	r3, [r3, #0]
 80002c8:	681a      	ldr	r2, [r3, #0]
 80002ca:	4b08      	ldr	r3, [pc, #32]	@ (80002ec <ADC_Init+0x6c>)
 80002cc:	681b      	ldr	r3, [r3, #0]
 80002ce:	f042 0201 	orr.w	r2, r2, #1
 80002d2:	601a      	str	r2, [r3, #0]
}
 80002d4:	bf00      	nop
 80002d6:	46bd      	mov	sp, r7
 80002d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002dc:	4770      	bx	lr
 80002de:	bf00      	nop
 80002e0:	20000000 	.word	0x20000000
 80002e4:	20000004 	.word	0x20000004
 80002e8:	20000008 	.word	0x20000008
 80002ec:	20000010 	.word	0x20000010
 80002f0:	20000014 	.word	0x20000014

080002f4 <delay>:

void delay() {
 80002f4:	b480      	push	{r7}
 80002f6:	b083      	sub	sp, #12
 80002f8:	af00      	add	r7, sp, #0
	for (uint32_t i = 0; i < 300000; i++);
 80002fa:	2300      	movs	r3, #0
 80002fc:	607b      	str	r3, [r7, #4]
 80002fe:	e002      	b.n	8000306 <delay+0x12>
 8000300:	687b      	ldr	r3, [r7, #4]
 8000302:	3301      	adds	r3, #1
 8000304:	607b      	str	r3, [r7, #4]
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	4a04      	ldr	r2, [pc, #16]	@ (800031c <delay+0x28>)
 800030a:	4293      	cmp	r3, r2
 800030c:	d9f8      	bls.n	8000300 <delay+0xc>
}
 800030e:	bf00      	nop
 8000310:	bf00      	nop
 8000312:	370c      	adds	r7, #12
 8000314:	46bd      	mov	sp, r7
 8000316:	f85d 7b04 	ldr.w	r7, [sp], #4
 800031a:	4770      	bx	lr
 800031c:	000493df 	.word	0x000493df

08000320 <main>:

int main(void) {
 8000320:	b580      	push	{r7, lr}
 8000322:	af00      	add	r7, sp, #0
	printf("Display ADC Value \n");
 8000324:	4811      	ldr	r0, [pc, #68]	@ (800036c <main+0x4c>)
 8000326:	f000 fa25 	bl	8000774 <puts>
	ADC_Init();
 800032a:	f7ff ffa9 	bl	8000280 <ADC_Init>

	while (1) {
		//start the ADC conversion
		*pADC_CR2 |= 0x40000000;
 800032e:	4b10      	ldr	r3, [pc, #64]	@ (8000370 <main+0x50>)
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	681a      	ldr	r2, [r3, #0]
 8000334:	4b0e      	ldr	r3, [pc, #56]	@ (8000370 <main+0x50>)
 8000336:	681b      	ldr	r3, [r3, #0]
 8000338:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 800033c:	601a      	str	r2, [r3, #0]
		while (!(*pADC_SR & 2)) {
 800033e:	bf00      	nop
 8000340:	4b0c      	ldr	r3, [pc, #48]	@ (8000374 <main+0x54>)
 8000342:	681b      	ldr	r3, [r3, #0]
 8000344:	681b      	ldr	r3, [r3, #0]
 8000346:	f003 0302 	and.w	r3, r3, #2
 800034a:	2b00      	cmp	r3, #0
 800034c:	d0f8      	beq.n	8000340 <main+0x20>
		} //wait till the end of conversion
		analogValue = *pADC_DR;
 800034e:	4b0a      	ldr	r3, [pc, #40]	@ (8000378 <main+0x58>)
 8000350:	681b      	ldr	r3, [r3, #0]
 8000352:	681b      	ldr	r3, [r3, #0]
 8000354:	b29a      	uxth	r2, r3
 8000356:	4b09      	ldr	r3, [pc, #36]	@ (800037c <main+0x5c>)
 8000358:	801a      	strh	r2, [r3, #0]
		printf("Display ADC Value  %d\n", analogValue);
 800035a:	4b08      	ldr	r3, [pc, #32]	@ (800037c <main+0x5c>)
 800035c:	881b      	ldrh	r3, [r3, #0]
 800035e:	4619      	mov	r1, r3
 8000360:	4807      	ldr	r0, [pc, #28]	@ (8000380 <main+0x60>)
 8000362:	f000 f99f 	bl	80006a4 <iprintf>
		delay();
 8000366:	f7ff ffc5 	bl	80002f4 <delay>
		*pADC_CR2 |= 0x40000000;
 800036a:	e7e0      	b.n	800032e <main+0xe>
 800036c:	08001454 	.word	0x08001454
 8000370:	20000010 	.word	0x20000010
 8000374:	2000000c 	.word	0x2000000c
 8000378:	20000018 	.word	0x20000018
 800037c:	20000094 	.word	0x20000094
 8000380:	08001468 	.word	0x08001468

08000384 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000384:	b580      	push	{r7, lr}
 8000386:	b086      	sub	sp, #24
 8000388:	af00      	add	r7, sp, #0
 800038a:	60f8      	str	r0, [r7, #12]
 800038c:	60b9      	str	r1, [r7, #8]
 800038e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000390:	2300      	movs	r3, #0
 8000392:	617b      	str	r3, [r7, #20]
 8000394:	e00a      	b.n	80003ac <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000396:	f3af 8000 	nop.w
 800039a:	4601      	mov	r1, r0
 800039c:	68bb      	ldr	r3, [r7, #8]
 800039e:	1c5a      	adds	r2, r3, #1
 80003a0:	60ba      	str	r2, [r7, #8]
 80003a2:	b2ca      	uxtb	r2, r1
 80003a4:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003a6:	697b      	ldr	r3, [r7, #20]
 80003a8:	3301      	adds	r3, #1
 80003aa:	617b      	str	r3, [r7, #20]
 80003ac:	697a      	ldr	r2, [r7, #20]
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	429a      	cmp	r2, r3
 80003b2:	dbf0      	blt.n	8000396 <_read+0x12>
  }

  return len;
 80003b4:	687b      	ldr	r3, [r7, #4]
}
 80003b6:	4618      	mov	r0, r3
 80003b8:	3718      	adds	r7, #24
 80003ba:	46bd      	mov	sp, r7
 80003bc:	bd80      	pop	{r7, pc}

080003be <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80003be:	b580      	push	{r7, lr}
 80003c0:	b086      	sub	sp, #24
 80003c2:	af00      	add	r7, sp, #0
 80003c4:	60f8      	str	r0, [r7, #12]
 80003c6:	60b9      	str	r1, [r7, #8]
 80003c8:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003ca:	2300      	movs	r3, #0
 80003cc:	617b      	str	r3, [r7, #20]
 80003ce:	e009      	b.n	80003e4 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80003d0:	68bb      	ldr	r3, [r7, #8]
 80003d2:	1c5a      	adds	r2, r3, #1
 80003d4:	60ba      	str	r2, [r7, #8]
 80003d6:	781b      	ldrb	r3, [r3, #0]
 80003d8:	4618      	mov	r0, r3
 80003da:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003de:	697b      	ldr	r3, [r7, #20]
 80003e0:	3301      	adds	r3, #1
 80003e2:	617b      	str	r3, [r7, #20]
 80003e4:	697a      	ldr	r2, [r7, #20]
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	429a      	cmp	r2, r3
 80003ea:	dbf1      	blt.n	80003d0 <_write+0x12>
  }
  return len;
 80003ec:	687b      	ldr	r3, [r7, #4]
}
 80003ee:	4618      	mov	r0, r3
 80003f0:	3718      	adds	r7, #24
 80003f2:	46bd      	mov	sp, r7
 80003f4:	bd80      	pop	{r7, pc}

080003f6 <_close>:

int _close(int file)
{
 80003f6:	b480      	push	{r7}
 80003f8:	b083      	sub	sp, #12
 80003fa:	af00      	add	r7, sp, #0
 80003fc:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80003fe:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000402:	4618      	mov	r0, r3
 8000404:	370c      	adds	r7, #12
 8000406:	46bd      	mov	sp, r7
 8000408:	f85d 7b04 	ldr.w	r7, [sp], #4
 800040c:	4770      	bx	lr

0800040e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800040e:	b480      	push	{r7}
 8000410:	b083      	sub	sp, #12
 8000412:	af00      	add	r7, sp, #0
 8000414:	6078      	str	r0, [r7, #4]
 8000416:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000418:	683b      	ldr	r3, [r7, #0]
 800041a:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800041e:	605a      	str	r2, [r3, #4]
  return 0;
 8000420:	2300      	movs	r3, #0
}
 8000422:	4618      	mov	r0, r3
 8000424:	370c      	adds	r7, #12
 8000426:	46bd      	mov	sp, r7
 8000428:	f85d 7b04 	ldr.w	r7, [sp], #4
 800042c:	4770      	bx	lr

0800042e <_isatty>:

int _isatty(int file)
{
 800042e:	b480      	push	{r7}
 8000430:	b083      	sub	sp, #12
 8000432:	af00      	add	r7, sp, #0
 8000434:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000436:	2301      	movs	r3, #1
}
 8000438:	4618      	mov	r0, r3
 800043a:	370c      	adds	r7, #12
 800043c:	46bd      	mov	sp, r7
 800043e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000442:	4770      	bx	lr

08000444 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000444:	b480      	push	{r7}
 8000446:	b085      	sub	sp, #20
 8000448:	af00      	add	r7, sp, #0
 800044a:	60f8      	str	r0, [r7, #12]
 800044c:	60b9      	str	r1, [r7, #8]
 800044e:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000450:	2300      	movs	r3, #0
}
 8000452:	4618      	mov	r0, r3
 8000454:	3714      	adds	r7, #20
 8000456:	46bd      	mov	sp, r7
 8000458:	f85d 7b04 	ldr.w	r7, [sp], #4
 800045c:	4770      	bx	lr
	...

08000460 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000460:	b580      	push	{r7, lr}
 8000462:	b086      	sub	sp, #24
 8000464:	af00      	add	r7, sp, #0
 8000466:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000468:	4a14      	ldr	r2, [pc, #80]	@ (80004bc <_sbrk+0x5c>)
 800046a:	4b15      	ldr	r3, [pc, #84]	@ (80004c0 <_sbrk+0x60>)
 800046c:	1ad3      	subs	r3, r2, r3
 800046e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000470:	697b      	ldr	r3, [r7, #20]
 8000472:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000474:	4b13      	ldr	r3, [pc, #76]	@ (80004c4 <_sbrk+0x64>)
 8000476:	681b      	ldr	r3, [r3, #0]
 8000478:	2b00      	cmp	r3, #0
 800047a:	d102      	bne.n	8000482 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800047c:	4b11      	ldr	r3, [pc, #68]	@ (80004c4 <_sbrk+0x64>)
 800047e:	4a12      	ldr	r2, [pc, #72]	@ (80004c8 <_sbrk+0x68>)
 8000480:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000482:	4b10      	ldr	r3, [pc, #64]	@ (80004c4 <_sbrk+0x64>)
 8000484:	681a      	ldr	r2, [r3, #0]
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	4413      	add	r3, r2
 800048a:	693a      	ldr	r2, [r7, #16]
 800048c:	429a      	cmp	r2, r3
 800048e:	d207      	bcs.n	80004a0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000490:	f000 fa9e 	bl	80009d0 <__errno>
 8000494:	4603      	mov	r3, r0
 8000496:	220c      	movs	r2, #12
 8000498:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800049a:	f04f 33ff 	mov.w	r3, #4294967295
 800049e:	e009      	b.n	80004b4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004a0:	4b08      	ldr	r3, [pc, #32]	@ (80004c4 <_sbrk+0x64>)
 80004a2:	681b      	ldr	r3, [r3, #0]
 80004a4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004a6:	4b07      	ldr	r3, [pc, #28]	@ (80004c4 <_sbrk+0x64>)
 80004a8:	681a      	ldr	r2, [r3, #0]
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	4413      	add	r3, r2
 80004ae:	4a05      	ldr	r2, [pc, #20]	@ (80004c4 <_sbrk+0x64>)
 80004b0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004b2:	68fb      	ldr	r3, [r7, #12]
}
 80004b4:	4618      	mov	r0, r3
 80004b6:	3718      	adds	r7, #24
 80004b8:	46bd      	mov	sp, r7
 80004ba:	bd80      	pop	{r7, pc}
 80004bc:	20018000 	.word	0x20018000
 80004c0:	00000400 	.word	0x00000400
 80004c4:	20000098 	.word	0x20000098
 80004c8:	200001e8 	.word	0x200001e8

080004cc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004cc:	480d      	ldr	r0, [pc, #52]	@ (8000504 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004ce:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004d0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004d4:	480c      	ldr	r0, [pc, #48]	@ (8000508 <LoopForever+0x6>)
  ldr r1, =_edata
 80004d6:	490d      	ldr	r1, [pc, #52]	@ (800050c <LoopForever+0xa>)
  ldr r2, =_sidata
 80004d8:	4a0d      	ldr	r2, [pc, #52]	@ (8000510 <LoopForever+0xe>)
  movs r3, #0
 80004da:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004dc:	e002      	b.n	80004e4 <LoopCopyDataInit>

080004de <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004de:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004e0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004e2:	3304      	adds	r3, #4

080004e4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004e4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004e6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004e8:	d3f9      	bcc.n	80004de <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004ea:	4a0a      	ldr	r2, [pc, #40]	@ (8000514 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004ec:	4c0a      	ldr	r4, [pc, #40]	@ (8000518 <LoopForever+0x16>)
  movs r3, #0
 80004ee:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004f0:	e001      	b.n	80004f6 <LoopFillZerobss>

080004f2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004f2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004f4:	3204      	adds	r2, #4

080004f6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004f6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004f8:	d3fb      	bcc.n	80004f2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004fa:	f000 fa6f 	bl	80009dc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004fe:	f7ff ff0f 	bl	8000320 <main>

08000502 <LoopForever>:

LoopForever:
  b LoopForever
 8000502:	e7fe      	b.n	8000502 <LoopForever>
  ldr   r0, =_estack
 8000504:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000508:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800050c:	20000078 	.word	0x20000078
  ldr r2, =_sidata
 8000510:	080014c4 	.word	0x080014c4
  ldr r2, =_sbss
 8000514:	20000078 	.word	0x20000078
  ldr r4, =_ebss
 8000518:	200001e8 	.word	0x200001e8

0800051c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800051c:	e7fe      	b.n	800051c <ADC_IRQHandler>
	...

08000520 <std>:
 8000520:	2300      	movs	r3, #0
 8000522:	b510      	push	{r4, lr}
 8000524:	4604      	mov	r4, r0
 8000526:	e9c0 3300 	strd	r3, r3, [r0]
 800052a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800052e:	6083      	str	r3, [r0, #8]
 8000530:	8181      	strh	r1, [r0, #12]
 8000532:	6643      	str	r3, [r0, #100]	@ 0x64
 8000534:	81c2      	strh	r2, [r0, #14]
 8000536:	6183      	str	r3, [r0, #24]
 8000538:	4619      	mov	r1, r3
 800053a:	2208      	movs	r2, #8
 800053c:	305c      	adds	r0, #92	@ 0x5c
 800053e:	f000 f9f9 	bl	8000934 <memset>
 8000542:	4b0d      	ldr	r3, [pc, #52]	@ (8000578 <std+0x58>)
 8000544:	6263      	str	r3, [r4, #36]	@ 0x24
 8000546:	4b0d      	ldr	r3, [pc, #52]	@ (800057c <std+0x5c>)
 8000548:	62a3      	str	r3, [r4, #40]	@ 0x28
 800054a:	4b0d      	ldr	r3, [pc, #52]	@ (8000580 <std+0x60>)
 800054c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800054e:	4b0d      	ldr	r3, [pc, #52]	@ (8000584 <std+0x64>)
 8000550:	6323      	str	r3, [r4, #48]	@ 0x30
 8000552:	4b0d      	ldr	r3, [pc, #52]	@ (8000588 <std+0x68>)
 8000554:	6224      	str	r4, [r4, #32]
 8000556:	429c      	cmp	r4, r3
 8000558:	d006      	beq.n	8000568 <std+0x48>
 800055a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800055e:	4294      	cmp	r4, r2
 8000560:	d002      	beq.n	8000568 <std+0x48>
 8000562:	33d0      	adds	r3, #208	@ 0xd0
 8000564:	429c      	cmp	r4, r3
 8000566:	d105      	bne.n	8000574 <std+0x54>
 8000568:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800056c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000570:	f000 ba58 	b.w	8000a24 <__retarget_lock_init_recursive>
 8000574:	bd10      	pop	{r4, pc}
 8000576:	bf00      	nop
 8000578:	08000785 	.word	0x08000785
 800057c:	080007a7 	.word	0x080007a7
 8000580:	080007df 	.word	0x080007df
 8000584:	08000803 	.word	0x08000803
 8000588:	2000009c 	.word	0x2000009c

0800058c <stdio_exit_handler>:
 800058c:	4a02      	ldr	r2, [pc, #8]	@ (8000598 <stdio_exit_handler+0xc>)
 800058e:	4903      	ldr	r1, [pc, #12]	@ (800059c <stdio_exit_handler+0x10>)
 8000590:	4803      	ldr	r0, [pc, #12]	@ (80005a0 <stdio_exit_handler+0x14>)
 8000592:	f000 b869 	b.w	8000668 <_fwalk_sglue>
 8000596:	bf00      	nop
 8000598:	2000001c 	.word	0x2000001c
 800059c:	080012c5 	.word	0x080012c5
 80005a0:	2000002c 	.word	0x2000002c

080005a4 <cleanup_stdio>:
 80005a4:	6841      	ldr	r1, [r0, #4]
 80005a6:	4b0c      	ldr	r3, [pc, #48]	@ (80005d8 <cleanup_stdio+0x34>)
 80005a8:	4299      	cmp	r1, r3
 80005aa:	b510      	push	{r4, lr}
 80005ac:	4604      	mov	r4, r0
 80005ae:	d001      	beq.n	80005b4 <cleanup_stdio+0x10>
 80005b0:	f000 fe88 	bl	80012c4 <_fflush_r>
 80005b4:	68a1      	ldr	r1, [r4, #8]
 80005b6:	4b09      	ldr	r3, [pc, #36]	@ (80005dc <cleanup_stdio+0x38>)
 80005b8:	4299      	cmp	r1, r3
 80005ba:	d002      	beq.n	80005c2 <cleanup_stdio+0x1e>
 80005bc:	4620      	mov	r0, r4
 80005be:	f000 fe81 	bl	80012c4 <_fflush_r>
 80005c2:	68e1      	ldr	r1, [r4, #12]
 80005c4:	4b06      	ldr	r3, [pc, #24]	@ (80005e0 <cleanup_stdio+0x3c>)
 80005c6:	4299      	cmp	r1, r3
 80005c8:	d004      	beq.n	80005d4 <cleanup_stdio+0x30>
 80005ca:	4620      	mov	r0, r4
 80005cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005d0:	f000 be78 	b.w	80012c4 <_fflush_r>
 80005d4:	bd10      	pop	{r4, pc}
 80005d6:	bf00      	nop
 80005d8:	2000009c 	.word	0x2000009c
 80005dc:	20000104 	.word	0x20000104
 80005e0:	2000016c 	.word	0x2000016c

080005e4 <global_stdio_init.part.0>:
 80005e4:	b510      	push	{r4, lr}
 80005e6:	4b0b      	ldr	r3, [pc, #44]	@ (8000614 <global_stdio_init.part.0+0x30>)
 80005e8:	4c0b      	ldr	r4, [pc, #44]	@ (8000618 <global_stdio_init.part.0+0x34>)
 80005ea:	4a0c      	ldr	r2, [pc, #48]	@ (800061c <global_stdio_init.part.0+0x38>)
 80005ec:	601a      	str	r2, [r3, #0]
 80005ee:	4620      	mov	r0, r4
 80005f0:	2200      	movs	r2, #0
 80005f2:	2104      	movs	r1, #4
 80005f4:	f7ff ff94 	bl	8000520 <std>
 80005f8:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80005fc:	2201      	movs	r2, #1
 80005fe:	2109      	movs	r1, #9
 8000600:	f7ff ff8e 	bl	8000520 <std>
 8000604:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000608:	2202      	movs	r2, #2
 800060a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800060e:	2112      	movs	r1, #18
 8000610:	f7ff bf86 	b.w	8000520 <std>
 8000614:	200001d4 	.word	0x200001d4
 8000618:	2000009c 	.word	0x2000009c
 800061c:	0800058d 	.word	0x0800058d

08000620 <__sfp_lock_acquire>:
 8000620:	4801      	ldr	r0, [pc, #4]	@ (8000628 <__sfp_lock_acquire+0x8>)
 8000622:	f000 ba00 	b.w	8000a26 <__retarget_lock_acquire_recursive>
 8000626:	bf00      	nop
 8000628:	200001dd 	.word	0x200001dd

0800062c <__sfp_lock_release>:
 800062c:	4801      	ldr	r0, [pc, #4]	@ (8000634 <__sfp_lock_release+0x8>)
 800062e:	f000 b9fb 	b.w	8000a28 <__retarget_lock_release_recursive>
 8000632:	bf00      	nop
 8000634:	200001dd 	.word	0x200001dd

08000638 <__sinit>:
 8000638:	b510      	push	{r4, lr}
 800063a:	4604      	mov	r4, r0
 800063c:	f7ff fff0 	bl	8000620 <__sfp_lock_acquire>
 8000640:	6a23      	ldr	r3, [r4, #32]
 8000642:	b11b      	cbz	r3, 800064c <__sinit+0x14>
 8000644:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000648:	f7ff bff0 	b.w	800062c <__sfp_lock_release>
 800064c:	4b04      	ldr	r3, [pc, #16]	@ (8000660 <__sinit+0x28>)
 800064e:	6223      	str	r3, [r4, #32]
 8000650:	4b04      	ldr	r3, [pc, #16]	@ (8000664 <__sinit+0x2c>)
 8000652:	681b      	ldr	r3, [r3, #0]
 8000654:	2b00      	cmp	r3, #0
 8000656:	d1f5      	bne.n	8000644 <__sinit+0xc>
 8000658:	f7ff ffc4 	bl	80005e4 <global_stdio_init.part.0>
 800065c:	e7f2      	b.n	8000644 <__sinit+0xc>
 800065e:	bf00      	nop
 8000660:	080005a5 	.word	0x080005a5
 8000664:	200001d4 	.word	0x200001d4

08000668 <_fwalk_sglue>:
 8000668:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800066c:	4607      	mov	r7, r0
 800066e:	4688      	mov	r8, r1
 8000670:	4614      	mov	r4, r2
 8000672:	2600      	movs	r6, #0
 8000674:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000678:	f1b9 0901 	subs.w	r9, r9, #1
 800067c:	d505      	bpl.n	800068a <_fwalk_sglue+0x22>
 800067e:	6824      	ldr	r4, [r4, #0]
 8000680:	2c00      	cmp	r4, #0
 8000682:	d1f7      	bne.n	8000674 <_fwalk_sglue+0xc>
 8000684:	4630      	mov	r0, r6
 8000686:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800068a:	89ab      	ldrh	r3, [r5, #12]
 800068c:	2b01      	cmp	r3, #1
 800068e:	d907      	bls.n	80006a0 <_fwalk_sglue+0x38>
 8000690:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000694:	3301      	adds	r3, #1
 8000696:	d003      	beq.n	80006a0 <_fwalk_sglue+0x38>
 8000698:	4629      	mov	r1, r5
 800069a:	4638      	mov	r0, r7
 800069c:	47c0      	blx	r8
 800069e:	4306      	orrs	r6, r0
 80006a0:	3568      	adds	r5, #104	@ 0x68
 80006a2:	e7e9      	b.n	8000678 <_fwalk_sglue+0x10>

080006a4 <iprintf>:
 80006a4:	b40f      	push	{r0, r1, r2, r3}
 80006a6:	b507      	push	{r0, r1, r2, lr}
 80006a8:	4906      	ldr	r1, [pc, #24]	@ (80006c4 <iprintf+0x20>)
 80006aa:	ab04      	add	r3, sp, #16
 80006ac:	6808      	ldr	r0, [r1, #0]
 80006ae:	f853 2b04 	ldr.w	r2, [r3], #4
 80006b2:	6881      	ldr	r1, [r0, #8]
 80006b4:	9301      	str	r3, [sp, #4]
 80006b6:	f000 fadb 	bl	8000c70 <_vfiprintf_r>
 80006ba:	b003      	add	sp, #12
 80006bc:	f85d eb04 	ldr.w	lr, [sp], #4
 80006c0:	b004      	add	sp, #16
 80006c2:	4770      	bx	lr
 80006c4:	20000028 	.word	0x20000028

080006c8 <_puts_r>:
 80006c8:	6a03      	ldr	r3, [r0, #32]
 80006ca:	b570      	push	{r4, r5, r6, lr}
 80006cc:	6884      	ldr	r4, [r0, #8]
 80006ce:	4605      	mov	r5, r0
 80006d0:	460e      	mov	r6, r1
 80006d2:	b90b      	cbnz	r3, 80006d8 <_puts_r+0x10>
 80006d4:	f7ff ffb0 	bl	8000638 <__sinit>
 80006d8:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80006da:	07db      	lsls	r3, r3, #31
 80006dc:	d405      	bmi.n	80006ea <_puts_r+0x22>
 80006de:	89a3      	ldrh	r3, [r4, #12]
 80006e0:	0598      	lsls	r0, r3, #22
 80006e2:	d402      	bmi.n	80006ea <_puts_r+0x22>
 80006e4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80006e6:	f000 f99e 	bl	8000a26 <__retarget_lock_acquire_recursive>
 80006ea:	89a3      	ldrh	r3, [r4, #12]
 80006ec:	0719      	lsls	r1, r3, #28
 80006ee:	d502      	bpl.n	80006f6 <_puts_r+0x2e>
 80006f0:	6923      	ldr	r3, [r4, #16]
 80006f2:	2b00      	cmp	r3, #0
 80006f4:	d135      	bne.n	8000762 <_puts_r+0x9a>
 80006f6:	4621      	mov	r1, r4
 80006f8:	4628      	mov	r0, r5
 80006fa:	f000 f8c5 	bl	8000888 <__swsetup_r>
 80006fe:	b380      	cbz	r0, 8000762 <_puts_r+0x9a>
 8000700:	f04f 35ff 	mov.w	r5, #4294967295
 8000704:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000706:	07da      	lsls	r2, r3, #31
 8000708:	d405      	bmi.n	8000716 <_puts_r+0x4e>
 800070a:	89a3      	ldrh	r3, [r4, #12]
 800070c:	059b      	lsls	r3, r3, #22
 800070e:	d402      	bmi.n	8000716 <_puts_r+0x4e>
 8000710:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000712:	f000 f989 	bl	8000a28 <__retarget_lock_release_recursive>
 8000716:	4628      	mov	r0, r5
 8000718:	bd70      	pop	{r4, r5, r6, pc}
 800071a:	2b00      	cmp	r3, #0
 800071c:	da04      	bge.n	8000728 <_puts_r+0x60>
 800071e:	69a2      	ldr	r2, [r4, #24]
 8000720:	429a      	cmp	r2, r3
 8000722:	dc17      	bgt.n	8000754 <_puts_r+0x8c>
 8000724:	290a      	cmp	r1, #10
 8000726:	d015      	beq.n	8000754 <_puts_r+0x8c>
 8000728:	6823      	ldr	r3, [r4, #0]
 800072a:	1c5a      	adds	r2, r3, #1
 800072c:	6022      	str	r2, [r4, #0]
 800072e:	7019      	strb	r1, [r3, #0]
 8000730:	68a3      	ldr	r3, [r4, #8]
 8000732:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000736:	3b01      	subs	r3, #1
 8000738:	60a3      	str	r3, [r4, #8]
 800073a:	2900      	cmp	r1, #0
 800073c:	d1ed      	bne.n	800071a <_puts_r+0x52>
 800073e:	2b00      	cmp	r3, #0
 8000740:	da11      	bge.n	8000766 <_puts_r+0x9e>
 8000742:	4622      	mov	r2, r4
 8000744:	210a      	movs	r1, #10
 8000746:	4628      	mov	r0, r5
 8000748:	f000 f85f 	bl	800080a <__swbuf_r>
 800074c:	3001      	adds	r0, #1
 800074e:	d0d7      	beq.n	8000700 <_puts_r+0x38>
 8000750:	250a      	movs	r5, #10
 8000752:	e7d7      	b.n	8000704 <_puts_r+0x3c>
 8000754:	4622      	mov	r2, r4
 8000756:	4628      	mov	r0, r5
 8000758:	f000 f857 	bl	800080a <__swbuf_r>
 800075c:	3001      	adds	r0, #1
 800075e:	d1e7      	bne.n	8000730 <_puts_r+0x68>
 8000760:	e7ce      	b.n	8000700 <_puts_r+0x38>
 8000762:	3e01      	subs	r6, #1
 8000764:	e7e4      	b.n	8000730 <_puts_r+0x68>
 8000766:	6823      	ldr	r3, [r4, #0]
 8000768:	1c5a      	adds	r2, r3, #1
 800076a:	6022      	str	r2, [r4, #0]
 800076c:	220a      	movs	r2, #10
 800076e:	701a      	strb	r2, [r3, #0]
 8000770:	e7ee      	b.n	8000750 <_puts_r+0x88>
	...

08000774 <puts>:
 8000774:	4b02      	ldr	r3, [pc, #8]	@ (8000780 <puts+0xc>)
 8000776:	4601      	mov	r1, r0
 8000778:	6818      	ldr	r0, [r3, #0]
 800077a:	f7ff bfa5 	b.w	80006c8 <_puts_r>
 800077e:	bf00      	nop
 8000780:	20000028 	.word	0x20000028

08000784 <__sread>:
 8000784:	b510      	push	{r4, lr}
 8000786:	460c      	mov	r4, r1
 8000788:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800078c:	f000 f8fc 	bl	8000988 <_read_r>
 8000790:	2800      	cmp	r0, #0
 8000792:	bfab      	itete	ge
 8000794:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000796:	89a3      	ldrhlt	r3, [r4, #12]
 8000798:	181b      	addge	r3, r3, r0
 800079a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800079e:	bfac      	ite	ge
 80007a0:	6563      	strge	r3, [r4, #84]	@ 0x54
 80007a2:	81a3      	strhlt	r3, [r4, #12]
 80007a4:	bd10      	pop	{r4, pc}

080007a6 <__swrite>:
 80007a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80007aa:	461f      	mov	r7, r3
 80007ac:	898b      	ldrh	r3, [r1, #12]
 80007ae:	05db      	lsls	r3, r3, #23
 80007b0:	4605      	mov	r5, r0
 80007b2:	460c      	mov	r4, r1
 80007b4:	4616      	mov	r6, r2
 80007b6:	d505      	bpl.n	80007c4 <__swrite+0x1e>
 80007b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80007bc:	2302      	movs	r3, #2
 80007be:	2200      	movs	r2, #0
 80007c0:	f000 f8d0 	bl	8000964 <_lseek_r>
 80007c4:	89a3      	ldrh	r3, [r4, #12]
 80007c6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80007ca:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80007ce:	81a3      	strh	r3, [r4, #12]
 80007d0:	4632      	mov	r2, r6
 80007d2:	463b      	mov	r3, r7
 80007d4:	4628      	mov	r0, r5
 80007d6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80007da:	f000 b8e7 	b.w	80009ac <_write_r>

080007de <__sseek>:
 80007de:	b510      	push	{r4, lr}
 80007e0:	460c      	mov	r4, r1
 80007e2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80007e6:	f000 f8bd 	bl	8000964 <_lseek_r>
 80007ea:	1c43      	adds	r3, r0, #1
 80007ec:	89a3      	ldrh	r3, [r4, #12]
 80007ee:	bf15      	itete	ne
 80007f0:	6560      	strne	r0, [r4, #84]	@ 0x54
 80007f2:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80007f6:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80007fa:	81a3      	strheq	r3, [r4, #12]
 80007fc:	bf18      	it	ne
 80007fe:	81a3      	strhne	r3, [r4, #12]
 8000800:	bd10      	pop	{r4, pc}

08000802 <__sclose>:
 8000802:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000806:	f000 b89d 	b.w	8000944 <_close_r>

0800080a <__swbuf_r>:
 800080a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800080c:	460e      	mov	r6, r1
 800080e:	4614      	mov	r4, r2
 8000810:	4605      	mov	r5, r0
 8000812:	b118      	cbz	r0, 800081c <__swbuf_r+0x12>
 8000814:	6a03      	ldr	r3, [r0, #32]
 8000816:	b90b      	cbnz	r3, 800081c <__swbuf_r+0x12>
 8000818:	f7ff ff0e 	bl	8000638 <__sinit>
 800081c:	69a3      	ldr	r3, [r4, #24]
 800081e:	60a3      	str	r3, [r4, #8]
 8000820:	89a3      	ldrh	r3, [r4, #12]
 8000822:	071a      	lsls	r2, r3, #28
 8000824:	d501      	bpl.n	800082a <__swbuf_r+0x20>
 8000826:	6923      	ldr	r3, [r4, #16]
 8000828:	b943      	cbnz	r3, 800083c <__swbuf_r+0x32>
 800082a:	4621      	mov	r1, r4
 800082c:	4628      	mov	r0, r5
 800082e:	f000 f82b 	bl	8000888 <__swsetup_r>
 8000832:	b118      	cbz	r0, 800083c <__swbuf_r+0x32>
 8000834:	f04f 37ff 	mov.w	r7, #4294967295
 8000838:	4638      	mov	r0, r7
 800083a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800083c:	6823      	ldr	r3, [r4, #0]
 800083e:	6922      	ldr	r2, [r4, #16]
 8000840:	1a98      	subs	r0, r3, r2
 8000842:	6963      	ldr	r3, [r4, #20]
 8000844:	b2f6      	uxtb	r6, r6
 8000846:	4283      	cmp	r3, r0
 8000848:	4637      	mov	r7, r6
 800084a:	dc05      	bgt.n	8000858 <__swbuf_r+0x4e>
 800084c:	4621      	mov	r1, r4
 800084e:	4628      	mov	r0, r5
 8000850:	f000 fd38 	bl	80012c4 <_fflush_r>
 8000854:	2800      	cmp	r0, #0
 8000856:	d1ed      	bne.n	8000834 <__swbuf_r+0x2a>
 8000858:	68a3      	ldr	r3, [r4, #8]
 800085a:	3b01      	subs	r3, #1
 800085c:	60a3      	str	r3, [r4, #8]
 800085e:	6823      	ldr	r3, [r4, #0]
 8000860:	1c5a      	adds	r2, r3, #1
 8000862:	6022      	str	r2, [r4, #0]
 8000864:	701e      	strb	r6, [r3, #0]
 8000866:	6962      	ldr	r2, [r4, #20]
 8000868:	1c43      	adds	r3, r0, #1
 800086a:	429a      	cmp	r2, r3
 800086c:	d004      	beq.n	8000878 <__swbuf_r+0x6e>
 800086e:	89a3      	ldrh	r3, [r4, #12]
 8000870:	07db      	lsls	r3, r3, #31
 8000872:	d5e1      	bpl.n	8000838 <__swbuf_r+0x2e>
 8000874:	2e0a      	cmp	r6, #10
 8000876:	d1df      	bne.n	8000838 <__swbuf_r+0x2e>
 8000878:	4621      	mov	r1, r4
 800087a:	4628      	mov	r0, r5
 800087c:	f000 fd22 	bl	80012c4 <_fflush_r>
 8000880:	2800      	cmp	r0, #0
 8000882:	d0d9      	beq.n	8000838 <__swbuf_r+0x2e>
 8000884:	e7d6      	b.n	8000834 <__swbuf_r+0x2a>
	...

08000888 <__swsetup_r>:
 8000888:	b538      	push	{r3, r4, r5, lr}
 800088a:	4b29      	ldr	r3, [pc, #164]	@ (8000930 <__swsetup_r+0xa8>)
 800088c:	4605      	mov	r5, r0
 800088e:	6818      	ldr	r0, [r3, #0]
 8000890:	460c      	mov	r4, r1
 8000892:	b118      	cbz	r0, 800089c <__swsetup_r+0x14>
 8000894:	6a03      	ldr	r3, [r0, #32]
 8000896:	b90b      	cbnz	r3, 800089c <__swsetup_r+0x14>
 8000898:	f7ff fece 	bl	8000638 <__sinit>
 800089c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80008a0:	0719      	lsls	r1, r3, #28
 80008a2:	d422      	bmi.n	80008ea <__swsetup_r+0x62>
 80008a4:	06da      	lsls	r2, r3, #27
 80008a6:	d407      	bmi.n	80008b8 <__swsetup_r+0x30>
 80008a8:	2209      	movs	r2, #9
 80008aa:	602a      	str	r2, [r5, #0]
 80008ac:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80008b0:	81a3      	strh	r3, [r4, #12]
 80008b2:	f04f 30ff 	mov.w	r0, #4294967295
 80008b6:	e033      	b.n	8000920 <__swsetup_r+0x98>
 80008b8:	0758      	lsls	r0, r3, #29
 80008ba:	d512      	bpl.n	80008e2 <__swsetup_r+0x5a>
 80008bc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80008be:	b141      	cbz	r1, 80008d2 <__swsetup_r+0x4a>
 80008c0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80008c4:	4299      	cmp	r1, r3
 80008c6:	d002      	beq.n	80008ce <__swsetup_r+0x46>
 80008c8:	4628      	mov	r0, r5
 80008ca:	f000 f8af 	bl	8000a2c <_free_r>
 80008ce:	2300      	movs	r3, #0
 80008d0:	6363      	str	r3, [r4, #52]	@ 0x34
 80008d2:	89a3      	ldrh	r3, [r4, #12]
 80008d4:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80008d8:	81a3      	strh	r3, [r4, #12]
 80008da:	2300      	movs	r3, #0
 80008dc:	6063      	str	r3, [r4, #4]
 80008de:	6923      	ldr	r3, [r4, #16]
 80008e0:	6023      	str	r3, [r4, #0]
 80008e2:	89a3      	ldrh	r3, [r4, #12]
 80008e4:	f043 0308 	orr.w	r3, r3, #8
 80008e8:	81a3      	strh	r3, [r4, #12]
 80008ea:	6923      	ldr	r3, [r4, #16]
 80008ec:	b94b      	cbnz	r3, 8000902 <__swsetup_r+0x7a>
 80008ee:	89a3      	ldrh	r3, [r4, #12]
 80008f0:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80008f4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80008f8:	d003      	beq.n	8000902 <__swsetup_r+0x7a>
 80008fa:	4621      	mov	r1, r4
 80008fc:	4628      	mov	r0, r5
 80008fe:	f000 fd2f 	bl	8001360 <__smakebuf_r>
 8000902:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000906:	f013 0201 	ands.w	r2, r3, #1
 800090a:	d00a      	beq.n	8000922 <__swsetup_r+0x9a>
 800090c:	2200      	movs	r2, #0
 800090e:	60a2      	str	r2, [r4, #8]
 8000910:	6962      	ldr	r2, [r4, #20]
 8000912:	4252      	negs	r2, r2
 8000914:	61a2      	str	r2, [r4, #24]
 8000916:	6922      	ldr	r2, [r4, #16]
 8000918:	b942      	cbnz	r2, 800092c <__swsetup_r+0xa4>
 800091a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800091e:	d1c5      	bne.n	80008ac <__swsetup_r+0x24>
 8000920:	bd38      	pop	{r3, r4, r5, pc}
 8000922:	0799      	lsls	r1, r3, #30
 8000924:	bf58      	it	pl
 8000926:	6962      	ldrpl	r2, [r4, #20]
 8000928:	60a2      	str	r2, [r4, #8]
 800092a:	e7f4      	b.n	8000916 <__swsetup_r+0x8e>
 800092c:	2000      	movs	r0, #0
 800092e:	e7f7      	b.n	8000920 <__swsetup_r+0x98>
 8000930:	20000028 	.word	0x20000028

08000934 <memset>:
 8000934:	4402      	add	r2, r0
 8000936:	4603      	mov	r3, r0
 8000938:	4293      	cmp	r3, r2
 800093a:	d100      	bne.n	800093e <memset+0xa>
 800093c:	4770      	bx	lr
 800093e:	f803 1b01 	strb.w	r1, [r3], #1
 8000942:	e7f9      	b.n	8000938 <memset+0x4>

08000944 <_close_r>:
 8000944:	b538      	push	{r3, r4, r5, lr}
 8000946:	4d06      	ldr	r5, [pc, #24]	@ (8000960 <_close_r+0x1c>)
 8000948:	2300      	movs	r3, #0
 800094a:	4604      	mov	r4, r0
 800094c:	4608      	mov	r0, r1
 800094e:	602b      	str	r3, [r5, #0]
 8000950:	f7ff fd51 	bl	80003f6 <_close>
 8000954:	1c43      	adds	r3, r0, #1
 8000956:	d102      	bne.n	800095e <_close_r+0x1a>
 8000958:	682b      	ldr	r3, [r5, #0]
 800095a:	b103      	cbz	r3, 800095e <_close_r+0x1a>
 800095c:	6023      	str	r3, [r4, #0]
 800095e:	bd38      	pop	{r3, r4, r5, pc}
 8000960:	200001d8 	.word	0x200001d8

08000964 <_lseek_r>:
 8000964:	b538      	push	{r3, r4, r5, lr}
 8000966:	4d07      	ldr	r5, [pc, #28]	@ (8000984 <_lseek_r+0x20>)
 8000968:	4604      	mov	r4, r0
 800096a:	4608      	mov	r0, r1
 800096c:	4611      	mov	r1, r2
 800096e:	2200      	movs	r2, #0
 8000970:	602a      	str	r2, [r5, #0]
 8000972:	461a      	mov	r2, r3
 8000974:	f7ff fd66 	bl	8000444 <_lseek>
 8000978:	1c43      	adds	r3, r0, #1
 800097a:	d102      	bne.n	8000982 <_lseek_r+0x1e>
 800097c:	682b      	ldr	r3, [r5, #0]
 800097e:	b103      	cbz	r3, 8000982 <_lseek_r+0x1e>
 8000980:	6023      	str	r3, [r4, #0]
 8000982:	bd38      	pop	{r3, r4, r5, pc}
 8000984:	200001d8 	.word	0x200001d8

08000988 <_read_r>:
 8000988:	b538      	push	{r3, r4, r5, lr}
 800098a:	4d07      	ldr	r5, [pc, #28]	@ (80009a8 <_read_r+0x20>)
 800098c:	4604      	mov	r4, r0
 800098e:	4608      	mov	r0, r1
 8000990:	4611      	mov	r1, r2
 8000992:	2200      	movs	r2, #0
 8000994:	602a      	str	r2, [r5, #0]
 8000996:	461a      	mov	r2, r3
 8000998:	f7ff fcf4 	bl	8000384 <_read>
 800099c:	1c43      	adds	r3, r0, #1
 800099e:	d102      	bne.n	80009a6 <_read_r+0x1e>
 80009a0:	682b      	ldr	r3, [r5, #0]
 80009a2:	b103      	cbz	r3, 80009a6 <_read_r+0x1e>
 80009a4:	6023      	str	r3, [r4, #0]
 80009a6:	bd38      	pop	{r3, r4, r5, pc}
 80009a8:	200001d8 	.word	0x200001d8

080009ac <_write_r>:
 80009ac:	b538      	push	{r3, r4, r5, lr}
 80009ae:	4d07      	ldr	r5, [pc, #28]	@ (80009cc <_write_r+0x20>)
 80009b0:	4604      	mov	r4, r0
 80009b2:	4608      	mov	r0, r1
 80009b4:	4611      	mov	r1, r2
 80009b6:	2200      	movs	r2, #0
 80009b8:	602a      	str	r2, [r5, #0]
 80009ba:	461a      	mov	r2, r3
 80009bc:	f7ff fcff 	bl	80003be <_write>
 80009c0:	1c43      	adds	r3, r0, #1
 80009c2:	d102      	bne.n	80009ca <_write_r+0x1e>
 80009c4:	682b      	ldr	r3, [r5, #0]
 80009c6:	b103      	cbz	r3, 80009ca <_write_r+0x1e>
 80009c8:	6023      	str	r3, [r4, #0]
 80009ca:	bd38      	pop	{r3, r4, r5, pc}
 80009cc:	200001d8 	.word	0x200001d8

080009d0 <__errno>:
 80009d0:	4b01      	ldr	r3, [pc, #4]	@ (80009d8 <__errno+0x8>)
 80009d2:	6818      	ldr	r0, [r3, #0]
 80009d4:	4770      	bx	lr
 80009d6:	bf00      	nop
 80009d8:	20000028 	.word	0x20000028

080009dc <__libc_init_array>:
 80009dc:	b570      	push	{r4, r5, r6, lr}
 80009de:	4d0d      	ldr	r5, [pc, #52]	@ (8000a14 <__libc_init_array+0x38>)
 80009e0:	4c0d      	ldr	r4, [pc, #52]	@ (8000a18 <__libc_init_array+0x3c>)
 80009e2:	1b64      	subs	r4, r4, r5
 80009e4:	10a4      	asrs	r4, r4, #2
 80009e6:	2600      	movs	r6, #0
 80009e8:	42a6      	cmp	r6, r4
 80009ea:	d109      	bne.n	8000a00 <__libc_init_array+0x24>
 80009ec:	4d0b      	ldr	r5, [pc, #44]	@ (8000a1c <__libc_init_array+0x40>)
 80009ee:	4c0c      	ldr	r4, [pc, #48]	@ (8000a20 <__libc_init_array+0x44>)
 80009f0:	f000 fd24 	bl	800143c <_init>
 80009f4:	1b64      	subs	r4, r4, r5
 80009f6:	10a4      	asrs	r4, r4, #2
 80009f8:	2600      	movs	r6, #0
 80009fa:	42a6      	cmp	r6, r4
 80009fc:	d105      	bne.n	8000a0a <__libc_init_array+0x2e>
 80009fe:	bd70      	pop	{r4, r5, r6, pc}
 8000a00:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a04:	4798      	blx	r3
 8000a06:	3601      	adds	r6, #1
 8000a08:	e7ee      	b.n	80009e8 <__libc_init_array+0xc>
 8000a0a:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a0e:	4798      	blx	r3
 8000a10:	3601      	adds	r6, #1
 8000a12:	e7f2      	b.n	80009fa <__libc_init_array+0x1e>
 8000a14:	080014bc 	.word	0x080014bc
 8000a18:	080014bc 	.word	0x080014bc
 8000a1c:	080014bc 	.word	0x080014bc
 8000a20:	080014c0 	.word	0x080014c0

08000a24 <__retarget_lock_init_recursive>:
 8000a24:	4770      	bx	lr

08000a26 <__retarget_lock_acquire_recursive>:
 8000a26:	4770      	bx	lr

08000a28 <__retarget_lock_release_recursive>:
 8000a28:	4770      	bx	lr
	...

08000a2c <_free_r>:
 8000a2c:	b538      	push	{r3, r4, r5, lr}
 8000a2e:	4605      	mov	r5, r0
 8000a30:	2900      	cmp	r1, #0
 8000a32:	d041      	beq.n	8000ab8 <_free_r+0x8c>
 8000a34:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a38:	1f0c      	subs	r4, r1, #4
 8000a3a:	2b00      	cmp	r3, #0
 8000a3c:	bfb8      	it	lt
 8000a3e:	18e4      	addlt	r4, r4, r3
 8000a40:	f000 f8e0 	bl	8000c04 <__malloc_lock>
 8000a44:	4a1d      	ldr	r2, [pc, #116]	@ (8000abc <_free_r+0x90>)
 8000a46:	6813      	ldr	r3, [r2, #0]
 8000a48:	b933      	cbnz	r3, 8000a58 <_free_r+0x2c>
 8000a4a:	6063      	str	r3, [r4, #4]
 8000a4c:	6014      	str	r4, [r2, #0]
 8000a4e:	4628      	mov	r0, r5
 8000a50:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000a54:	f000 b8dc 	b.w	8000c10 <__malloc_unlock>
 8000a58:	42a3      	cmp	r3, r4
 8000a5a:	d908      	bls.n	8000a6e <_free_r+0x42>
 8000a5c:	6820      	ldr	r0, [r4, #0]
 8000a5e:	1821      	adds	r1, r4, r0
 8000a60:	428b      	cmp	r3, r1
 8000a62:	bf01      	itttt	eq
 8000a64:	6819      	ldreq	r1, [r3, #0]
 8000a66:	685b      	ldreq	r3, [r3, #4]
 8000a68:	1809      	addeq	r1, r1, r0
 8000a6a:	6021      	streq	r1, [r4, #0]
 8000a6c:	e7ed      	b.n	8000a4a <_free_r+0x1e>
 8000a6e:	461a      	mov	r2, r3
 8000a70:	685b      	ldr	r3, [r3, #4]
 8000a72:	b10b      	cbz	r3, 8000a78 <_free_r+0x4c>
 8000a74:	42a3      	cmp	r3, r4
 8000a76:	d9fa      	bls.n	8000a6e <_free_r+0x42>
 8000a78:	6811      	ldr	r1, [r2, #0]
 8000a7a:	1850      	adds	r0, r2, r1
 8000a7c:	42a0      	cmp	r0, r4
 8000a7e:	d10b      	bne.n	8000a98 <_free_r+0x6c>
 8000a80:	6820      	ldr	r0, [r4, #0]
 8000a82:	4401      	add	r1, r0
 8000a84:	1850      	adds	r0, r2, r1
 8000a86:	4283      	cmp	r3, r0
 8000a88:	6011      	str	r1, [r2, #0]
 8000a8a:	d1e0      	bne.n	8000a4e <_free_r+0x22>
 8000a8c:	6818      	ldr	r0, [r3, #0]
 8000a8e:	685b      	ldr	r3, [r3, #4]
 8000a90:	6053      	str	r3, [r2, #4]
 8000a92:	4408      	add	r0, r1
 8000a94:	6010      	str	r0, [r2, #0]
 8000a96:	e7da      	b.n	8000a4e <_free_r+0x22>
 8000a98:	d902      	bls.n	8000aa0 <_free_r+0x74>
 8000a9a:	230c      	movs	r3, #12
 8000a9c:	602b      	str	r3, [r5, #0]
 8000a9e:	e7d6      	b.n	8000a4e <_free_r+0x22>
 8000aa0:	6820      	ldr	r0, [r4, #0]
 8000aa2:	1821      	adds	r1, r4, r0
 8000aa4:	428b      	cmp	r3, r1
 8000aa6:	bf04      	itt	eq
 8000aa8:	6819      	ldreq	r1, [r3, #0]
 8000aaa:	685b      	ldreq	r3, [r3, #4]
 8000aac:	6063      	str	r3, [r4, #4]
 8000aae:	bf04      	itt	eq
 8000ab0:	1809      	addeq	r1, r1, r0
 8000ab2:	6021      	streq	r1, [r4, #0]
 8000ab4:	6054      	str	r4, [r2, #4]
 8000ab6:	e7ca      	b.n	8000a4e <_free_r+0x22>
 8000ab8:	bd38      	pop	{r3, r4, r5, pc}
 8000aba:	bf00      	nop
 8000abc:	200001e4 	.word	0x200001e4

08000ac0 <sbrk_aligned>:
 8000ac0:	b570      	push	{r4, r5, r6, lr}
 8000ac2:	4e0f      	ldr	r6, [pc, #60]	@ (8000b00 <sbrk_aligned+0x40>)
 8000ac4:	460c      	mov	r4, r1
 8000ac6:	6831      	ldr	r1, [r6, #0]
 8000ac8:	4605      	mov	r5, r0
 8000aca:	b911      	cbnz	r1, 8000ad2 <sbrk_aligned+0x12>
 8000acc:	f000 fca6 	bl	800141c <_sbrk_r>
 8000ad0:	6030      	str	r0, [r6, #0]
 8000ad2:	4621      	mov	r1, r4
 8000ad4:	4628      	mov	r0, r5
 8000ad6:	f000 fca1 	bl	800141c <_sbrk_r>
 8000ada:	1c43      	adds	r3, r0, #1
 8000adc:	d103      	bne.n	8000ae6 <sbrk_aligned+0x26>
 8000ade:	f04f 34ff 	mov.w	r4, #4294967295
 8000ae2:	4620      	mov	r0, r4
 8000ae4:	bd70      	pop	{r4, r5, r6, pc}
 8000ae6:	1cc4      	adds	r4, r0, #3
 8000ae8:	f024 0403 	bic.w	r4, r4, #3
 8000aec:	42a0      	cmp	r0, r4
 8000aee:	d0f8      	beq.n	8000ae2 <sbrk_aligned+0x22>
 8000af0:	1a21      	subs	r1, r4, r0
 8000af2:	4628      	mov	r0, r5
 8000af4:	f000 fc92 	bl	800141c <_sbrk_r>
 8000af8:	3001      	adds	r0, #1
 8000afa:	d1f2      	bne.n	8000ae2 <sbrk_aligned+0x22>
 8000afc:	e7ef      	b.n	8000ade <sbrk_aligned+0x1e>
 8000afe:	bf00      	nop
 8000b00:	200001e0 	.word	0x200001e0

08000b04 <_malloc_r>:
 8000b04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b08:	1ccd      	adds	r5, r1, #3
 8000b0a:	f025 0503 	bic.w	r5, r5, #3
 8000b0e:	3508      	adds	r5, #8
 8000b10:	2d0c      	cmp	r5, #12
 8000b12:	bf38      	it	cc
 8000b14:	250c      	movcc	r5, #12
 8000b16:	2d00      	cmp	r5, #0
 8000b18:	4606      	mov	r6, r0
 8000b1a:	db01      	blt.n	8000b20 <_malloc_r+0x1c>
 8000b1c:	42a9      	cmp	r1, r5
 8000b1e:	d904      	bls.n	8000b2a <_malloc_r+0x26>
 8000b20:	230c      	movs	r3, #12
 8000b22:	6033      	str	r3, [r6, #0]
 8000b24:	2000      	movs	r0, #0
 8000b26:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b2a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000c00 <_malloc_r+0xfc>
 8000b2e:	f000 f869 	bl	8000c04 <__malloc_lock>
 8000b32:	f8d8 3000 	ldr.w	r3, [r8]
 8000b36:	461c      	mov	r4, r3
 8000b38:	bb44      	cbnz	r4, 8000b8c <_malloc_r+0x88>
 8000b3a:	4629      	mov	r1, r5
 8000b3c:	4630      	mov	r0, r6
 8000b3e:	f7ff ffbf 	bl	8000ac0 <sbrk_aligned>
 8000b42:	1c43      	adds	r3, r0, #1
 8000b44:	4604      	mov	r4, r0
 8000b46:	d158      	bne.n	8000bfa <_malloc_r+0xf6>
 8000b48:	f8d8 4000 	ldr.w	r4, [r8]
 8000b4c:	4627      	mov	r7, r4
 8000b4e:	2f00      	cmp	r7, #0
 8000b50:	d143      	bne.n	8000bda <_malloc_r+0xd6>
 8000b52:	2c00      	cmp	r4, #0
 8000b54:	d04b      	beq.n	8000bee <_malloc_r+0xea>
 8000b56:	6823      	ldr	r3, [r4, #0]
 8000b58:	4639      	mov	r1, r7
 8000b5a:	4630      	mov	r0, r6
 8000b5c:	eb04 0903 	add.w	r9, r4, r3
 8000b60:	f000 fc5c 	bl	800141c <_sbrk_r>
 8000b64:	4581      	cmp	r9, r0
 8000b66:	d142      	bne.n	8000bee <_malloc_r+0xea>
 8000b68:	6821      	ldr	r1, [r4, #0]
 8000b6a:	1a6d      	subs	r5, r5, r1
 8000b6c:	4629      	mov	r1, r5
 8000b6e:	4630      	mov	r0, r6
 8000b70:	f7ff ffa6 	bl	8000ac0 <sbrk_aligned>
 8000b74:	3001      	adds	r0, #1
 8000b76:	d03a      	beq.n	8000bee <_malloc_r+0xea>
 8000b78:	6823      	ldr	r3, [r4, #0]
 8000b7a:	442b      	add	r3, r5
 8000b7c:	6023      	str	r3, [r4, #0]
 8000b7e:	f8d8 3000 	ldr.w	r3, [r8]
 8000b82:	685a      	ldr	r2, [r3, #4]
 8000b84:	bb62      	cbnz	r2, 8000be0 <_malloc_r+0xdc>
 8000b86:	f8c8 7000 	str.w	r7, [r8]
 8000b8a:	e00f      	b.n	8000bac <_malloc_r+0xa8>
 8000b8c:	6822      	ldr	r2, [r4, #0]
 8000b8e:	1b52      	subs	r2, r2, r5
 8000b90:	d420      	bmi.n	8000bd4 <_malloc_r+0xd0>
 8000b92:	2a0b      	cmp	r2, #11
 8000b94:	d917      	bls.n	8000bc6 <_malloc_r+0xc2>
 8000b96:	1961      	adds	r1, r4, r5
 8000b98:	42a3      	cmp	r3, r4
 8000b9a:	6025      	str	r5, [r4, #0]
 8000b9c:	bf18      	it	ne
 8000b9e:	6059      	strne	r1, [r3, #4]
 8000ba0:	6863      	ldr	r3, [r4, #4]
 8000ba2:	bf08      	it	eq
 8000ba4:	f8c8 1000 	streq.w	r1, [r8]
 8000ba8:	5162      	str	r2, [r4, r5]
 8000baa:	604b      	str	r3, [r1, #4]
 8000bac:	4630      	mov	r0, r6
 8000bae:	f000 f82f 	bl	8000c10 <__malloc_unlock>
 8000bb2:	f104 000b 	add.w	r0, r4, #11
 8000bb6:	1d23      	adds	r3, r4, #4
 8000bb8:	f020 0007 	bic.w	r0, r0, #7
 8000bbc:	1ac2      	subs	r2, r0, r3
 8000bbe:	bf1c      	itt	ne
 8000bc0:	1a1b      	subne	r3, r3, r0
 8000bc2:	50a3      	strne	r3, [r4, r2]
 8000bc4:	e7af      	b.n	8000b26 <_malloc_r+0x22>
 8000bc6:	6862      	ldr	r2, [r4, #4]
 8000bc8:	42a3      	cmp	r3, r4
 8000bca:	bf0c      	ite	eq
 8000bcc:	f8c8 2000 	streq.w	r2, [r8]
 8000bd0:	605a      	strne	r2, [r3, #4]
 8000bd2:	e7eb      	b.n	8000bac <_malloc_r+0xa8>
 8000bd4:	4623      	mov	r3, r4
 8000bd6:	6864      	ldr	r4, [r4, #4]
 8000bd8:	e7ae      	b.n	8000b38 <_malloc_r+0x34>
 8000bda:	463c      	mov	r4, r7
 8000bdc:	687f      	ldr	r7, [r7, #4]
 8000bde:	e7b6      	b.n	8000b4e <_malloc_r+0x4a>
 8000be0:	461a      	mov	r2, r3
 8000be2:	685b      	ldr	r3, [r3, #4]
 8000be4:	42a3      	cmp	r3, r4
 8000be6:	d1fb      	bne.n	8000be0 <_malloc_r+0xdc>
 8000be8:	2300      	movs	r3, #0
 8000bea:	6053      	str	r3, [r2, #4]
 8000bec:	e7de      	b.n	8000bac <_malloc_r+0xa8>
 8000bee:	230c      	movs	r3, #12
 8000bf0:	6033      	str	r3, [r6, #0]
 8000bf2:	4630      	mov	r0, r6
 8000bf4:	f000 f80c 	bl	8000c10 <__malloc_unlock>
 8000bf8:	e794      	b.n	8000b24 <_malloc_r+0x20>
 8000bfa:	6005      	str	r5, [r0, #0]
 8000bfc:	e7d6      	b.n	8000bac <_malloc_r+0xa8>
 8000bfe:	bf00      	nop
 8000c00:	200001e4 	.word	0x200001e4

08000c04 <__malloc_lock>:
 8000c04:	4801      	ldr	r0, [pc, #4]	@ (8000c0c <__malloc_lock+0x8>)
 8000c06:	f7ff bf0e 	b.w	8000a26 <__retarget_lock_acquire_recursive>
 8000c0a:	bf00      	nop
 8000c0c:	200001dc 	.word	0x200001dc

08000c10 <__malloc_unlock>:
 8000c10:	4801      	ldr	r0, [pc, #4]	@ (8000c18 <__malloc_unlock+0x8>)
 8000c12:	f7ff bf09 	b.w	8000a28 <__retarget_lock_release_recursive>
 8000c16:	bf00      	nop
 8000c18:	200001dc 	.word	0x200001dc

08000c1c <__sfputc_r>:
 8000c1c:	6893      	ldr	r3, [r2, #8]
 8000c1e:	3b01      	subs	r3, #1
 8000c20:	2b00      	cmp	r3, #0
 8000c22:	b410      	push	{r4}
 8000c24:	6093      	str	r3, [r2, #8]
 8000c26:	da08      	bge.n	8000c3a <__sfputc_r+0x1e>
 8000c28:	6994      	ldr	r4, [r2, #24]
 8000c2a:	42a3      	cmp	r3, r4
 8000c2c:	db01      	blt.n	8000c32 <__sfputc_r+0x16>
 8000c2e:	290a      	cmp	r1, #10
 8000c30:	d103      	bne.n	8000c3a <__sfputc_r+0x1e>
 8000c32:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000c36:	f7ff bde8 	b.w	800080a <__swbuf_r>
 8000c3a:	6813      	ldr	r3, [r2, #0]
 8000c3c:	1c58      	adds	r0, r3, #1
 8000c3e:	6010      	str	r0, [r2, #0]
 8000c40:	7019      	strb	r1, [r3, #0]
 8000c42:	4608      	mov	r0, r1
 8000c44:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000c48:	4770      	bx	lr

08000c4a <__sfputs_r>:
 8000c4a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c4c:	4606      	mov	r6, r0
 8000c4e:	460f      	mov	r7, r1
 8000c50:	4614      	mov	r4, r2
 8000c52:	18d5      	adds	r5, r2, r3
 8000c54:	42ac      	cmp	r4, r5
 8000c56:	d101      	bne.n	8000c5c <__sfputs_r+0x12>
 8000c58:	2000      	movs	r0, #0
 8000c5a:	e007      	b.n	8000c6c <__sfputs_r+0x22>
 8000c5c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c60:	463a      	mov	r2, r7
 8000c62:	4630      	mov	r0, r6
 8000c64:	f7ff ffda 	bl	8000c1c <__sfputc_r>
 8000c68:	1c43      	adds	r3, r0, #1
 8000c6a:	d1f3      	bne.n	8000c54 <__sfputs_r+0xa>
 8000c6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000c70 <_vfiprintf_r>:
 8000c70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000c74:	460d      	mov	r5, r1
 8000c76:	b09d      	sub	sp, #116	@ 0x74
 8000c78:	4614      	mov	r4, r2
 8000c7a:	4698      	mov	r8, r3
 8000c7c:	4606      	mov	r6, r0
 8000c7e:	b118      	cbz	r0, 8000c88 <_vfiprintf_r+0x18>
 8000c80:	6a03      	ldr	r3, [r0, #32]
 8000c82:	b90b      	cbnz	r3, 8000c88 <_vfiprintf_r+0x18>
 8000c84:	f7ff fcd8 	bl	8000638 <__sinit>
 8000c88:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000c8a:	07d9      	lsls	r1, r3, #31
 8000c8c:	d405      	bmi.n	8000c9a <_vfiprintf_r+0x2a>
 8000c8e:	89ab      	ldrh	r3, [r5, #12]
 8000c90:	059a      	lsls	r2, r3, #22
 8000c92:	d402      	bmi.n	8000c9a <_vfiprintf_r+0x2a>
 8000c94:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000c96:	f7ff fec6 	bl	8000a26 <__retarget_lock_acquire_recursive>
 8000c9a:	89ab      	ldrh	r3, [r5, #12]
 8000c9c:	071b      	lsls	r3, r3, #28
 8000c9e:	d501      	bpl.n	8000ca4 <_vfiprintf_r+0x34>
 8000ca0:	692b      	ldr	r3, [r5, #16]
 8000ca2:	b99b      	cbnz	r3, 8000ccc <_vfiprintf_r+0x5c>
 8000ca4:	4629      	mov	r1, r5
 8000ca6:	4630      	mov	r0, r6
 8000ca8:	f7ff fdee 	bl	8000888 <__swsetup_r>
 8000cac:	b170      	cbz	r0, 8000ccc <_vfiprintf_r+0x5c>
 8000cae:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000cb0:	07dc      	lsls	r4, r3, #31
 8000cb2:	d504      	bpl.n	8000cbe <_vfiprintf_r+0x4e>
 8000cb4:	f04f 30ff 	mov.w	r0, #4294967295
 8000cb8:	b01d      	add	sp, #116	@ 0x74
 8000cba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000cbe:	89ab      	ldrh	r3, [r5, #12]
 8000cc0:	0598      	lsls	r0, r3, #22
 8000cc2:	d4f7      	bmi.n	8000cb4 <_vfiprintf_r+0x44>
 8000cc4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000cc6:	f7ff feaf 	bl	8000a28 <__retarget_lock_release_recursive>
 8000cca:	e7f3      	b.n	8000cb4 <_vfiprintf_r+0x44>
 8000ccc:	2300      	movs	r3, #0
 8000cce:	9309      	str	r3, [sp, #36]	@ 0x24
 8000cd0:	2320      	movs	r3, #32
 8000cd2:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000cd6:	f8cd 800c 	str.w	r8, [sp, #12]
 8000cda:	2330      	movs	r3, #48	@ 0x30
 8000cdc:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000e8c <_vfiprintf_r+0x21c>
 8000ce0:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000ce4:	f04f 0901 	mov.w	r9, #1
 8000ce8:	4623      	mov	r3, r4
 8000cea:	469a      	mov	sl, r3
 8000cec:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000cf0:	b10a      	cbz	r2, 8000cf6 <_vfiprintf_r+0x86>
 8000cf2:	2a25      	cmp	r2, #37	@ 0x25
 8000cf4:	d1f9      	bne.n	8000cea <_vfiprintf_r+0x7a>
 8000cf6:	ebba 0b04 	subs.w	fp, sl, r4
 8000cfa:	d00b      	beq.n	8000d14 <_vfiprintf_r+0xa4>
 8000cfc:	465b      	mov	r3, fp
 8000cfe:	4622      	mov	r2, r4
 8000d00:	4629      	mov	r1, r5
 8000d02:	4630      	mov	r0, r6
 8000d04:	f7ff ffa1 	bl	8000c4a <__sfputs_r>
 8000d08:	3001      	adds	r0, #1
 8000d0a:	f000 80a7 	beq.w	8000e5c <_vfiprintf_r+0x1ec>
 8000d0e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000d10:	445a      	add	r2, fp
 8000d12:	9209      	str	r2, [sp, #36]	@ 0x24
 8000d14:	f89a 3000 	ldrb.w	r3, [sl]
 8000d18:	2b00      	cmp	r3, #0
 8000d1a:	f000 809f 	beq.w	8000e5c <_vfiprintf_r+0x1ec>
 8000d1e:	2300      	movs	r3, #0
 8000d20:	f04f 32ff 	mov.w	r2, #4294967295
 8000d24:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000d28:	f10a 0a01 	add.w	sl, sl, #1
 8000d2c:	9304      	str	r3, [sp, #16]
 8000d2e:	9307      	str	r3, [sp, #28]
 8000d30:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000d34:	931a      	str	r3, [sp, #104]	@ 0x68
 8000d36:	4654      	mov	r4, sl
 8000d38:	2205      	movs	r2, #5
 8000d3a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d3e:	4853      	ldr	r0, [pc, #332]	@ (8000e8c <_vfiprintf_r+0x21c>)
 8000d40:	f7ff fa4e 	bl	80001e0 <memchr>
 8000d44:	9a04      	ldr	r2, [sp, #16]
 8000d46:	b9d8      	cbnz	r0, 8000d80 <_vfiprintf_r+0x110>
 8000d48:	06d1      	lsls	r1, r2, #27
 8000d4a:	bf44      	itt	mi
 8000d4c:	2320      	movmi	r3, #32
 8000d4e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000d52:	0713      	lsls	r3, r2, #28
 8000d54:	bf44      	itt	mi
 8000d56:	232b      	movmi	r3, #43	@ 0x2b
 8000d58:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000d5c:	f89a 3000 	ldrb.w	r3, [sl]
 8000d60:	2b2a      	cmp	r3, #42	@ 0x2a
 8000d62:	d015      	beq.n	8000d90 <_vfiprintf_r+0x120>
 8000d64:	9a07      	ldr	r2, [sp, #28]
 8000d66:	4654      	mov	r4, sl
 8000d68:	2000      	movs	r0, #0
 8000d6a:	f04f 0c0a 	mov.w	ip, #10
 8000d6e:	4621      	mov	r1, r4
 8000d70:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000d74:	3b30      	subs	r3, #48	@ 0x30
 8000d76:	2b09      	cmp	r3, #9
 8000d78:	d94b      	bls.n	8000e12 <_vfiprintf_r+0x1a2>
 8000d7a:	b1b0      	cbz	r0, 8000daa <_vfiprintf_r+0x13a>
 8000d7c:	9207      	str	r2, [sp, #28]
 8000d7e:	e014      	b.n	8000daa <_vfiprintf_r+0x13a>
 8000d80:	eba0 0308 	sub.w	r3, r0, r8
 8000d84:	fa09 f303 	lsl.w	r3, r9, r3
 8000d88:	4313      	orrs	r3, r2
 8000d8a:	9304      	str	r3, [sp, #16]
 8000d8c:	46a2      	mov	sl, r4
 8000d8e:	e7d2      	b.n	8000d36 <_vfiprintf_r+0xc6>
 8000d90:	9b03      	ldr	r3, [sp, #12]
 8000d92:	1d19      	adds	r1, r3, #4
 8000d94:	681b      	ldr	r3, [r3, #0]
 8000d96:	9103      	str	r1, [sp, #12]
 8000d98:	2b00      	cmp	r3, #0
 8000d9a:	bfbb      	ittet	lt
 8000d9c:	425b      	neglt	r3, r3
 8000d9e:	f042 0202 	orrlt.w	r2, r2, #2
 8000da2:	9307      	strge	r3, [sp, #28]
 8000da4:	9307      	strlt	r3, [sp, #28]
 8000da6:	bfb8      	it	lt
 8000da8:	9204      	strlt	r2, [sp, #16]
 8000daa:	7823      	ldrb	r3, [r4, #0]
 8000dac:	2b2e      	cmp	r3, #46	@ 0x2e
 8000dae:	d10a      	bne.n	8000dc6 <_vfiprintf_r+0x156>
 8000db0:	7863      	ldrb	r3, [r4, #1]
 8000db2:	2b2a      	cmp	r3, #42	@ 0x2a
 8000db4:	d132      	bne.n	8000e1c <_vfiprintf_r+0x1ac>
 8000db6:	9b03      	ldr	r3, [sp, #12]
 8000db8:	1d1a      	adds	r2, r3, #4
 8000dba:	681b      	ldr	r3, [r3, #0]
 8000dbc:	9203      	str	r2, [sp, #12]
 8000dbe:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000dc2:	3402      	adds	r4, #2
 8000dc4:	9305      	str	r3, [sp, #20]
 8000dc6:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8000e9c <_vfiprintf_r+0x22c>
 8000dca:	7821      	ldrb	r1, [r4, #0]
 8000dcc:	2203      	movs	r2, #3
 8000dce:	4650      	mov	r0, sl
 8000dd0:	f7ff fa06 	bl	80001e0 <memchr>
 8000dd4:	b138      	cbz	r0, 8000de6 <_vfiprintf_r+0x176>
 8000dd6:	9b04      	ldr	r3, [sp, #16]
 8000dd8:	eba0 000a 	sub.w	r0, r0, sl
 8000ddc:	2240      	movs	r2, #64	@ 0x40
 8000dde:	4082      	lsls	r2, r0
 8000de0:	4313      	orrs	r3, r2
 8000de2:	3401      	adds	r4, #1
 8000de4:	9304      	str	r3, [sp, #16]
 8000de6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000dea:	4829      	ldr	r0, [pc, #164]	@ (8000e90 <_vfiprintf_r+0x220>)
 8000dec:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000df0:	2206      	movs	r2, #6
 8000df2:	f7ff f9f5 	bl	80001e0 <memchr>
 8000df6:	2800      	cmp	r0, #0
 8000df8:	d03f      	beq.n	8000e7a <_vfiprintf_r+0x20a>
 8000dfa:	4b26      	ldr	r3, [pc, #152]	@ (8000e94 <_vfiprintf_r+0x224>)
 8000dfc:	bb1b      	cbnz	r3, 8000e46 <_vfiprintf_r+0x1d6>
 8000dfe:	9b03      	ldr	r3, [sp, #12]
 8000e00:	3307      	adds	r3, #7
 8000e02:	f023 0307 	bic.w	r3, r3, #7
 8000e06:	3308      	adds	r3, #8
 8000e08:	9303      	str	r3, [sp, #12]
 8000e0a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000e0c:	443b      	add	r3, r7
 8000e0e:	9309      	str	r3, [sp, #36]	@ 0x24
 8000e10:	e76a      	b.n	8000ce8 <_vfiprintf_r+0x78>
 8000e12:	fb0c 3202 	mla	r2, ip, r2, r3
 8000e16:	460c      	mov	r4, r1
 8000e18:	2001      	movs	r0, #1
 8000e1a:	e7a8      	b.n	8000d6e <_vfiprintf_r+0xfe>
 8000e1c:	2300      	movs	r3, #0
 8000e1e:	3401      	adds	r4, #1
 8000e20:	9305      	str	r3, [sp, #20]
 8000e22:	4619      	mov	r1, r3
 8000e24:	f04f 0c0a 	mov.w	ip, #10
 8000e28:	4620      	mov	r0, r4
 8000e2a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000e2e:	3a30      	subs	r2, #48	@ 0x30
 8000e30:	2a09      	cmp	r2, #9
 8000e32:	d903      	bls.n	8000e3c <_vfiprintf_r+0x1cc>
 8000e34:	2b00      	cmp	r3, #0
 8000e36:	d0c6      	beq.n	8000dc6 <_vfiprintf_r+0x156>
 8000e38:	9105      	str	r1, [sp, #20]
 8000e3a:	e7c4      	b.n	8000dc6 <_vfiprintf_r+0x156>
 8000e3c:	fb0c 2101 	mla	r1, ip, r1, r2
 8000e40:	4604      	mov	r4, r0
 8000e42:	2301      	movs	r3, #1
 8000e44:	e7f0      	b.n	8000e28 <_vfiprintf_r+0x1b8>
 8000e46:	ab03      	add	r3, sp, #12
 8000e48:	9300      	str	r3, [sp, #0]
 8000e4a:	462a      	mov	r2, r5
 8000e4c:	4b12      	ldr	r3, [pc, #72]	@ (8000e98 <_vfiprintf_r+0x228>)
 8000e4e:	a904      	add	r1, sp, #16
 8000e50:	4630      	mov	r0, r6
 8000e52:	f3af 8000 	nop.w
 8000e56:	4607      	mov	r7, r0
 8000e58:	1c78      	adds	r0, r7, #1
 8000e5a:	d1d6      	bne.n	8000e0a <_vfiprintf_r+0x19a>
 8000e5c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000e5e:	07d9      	lsls	r1, r3, #31
 8000e60:	d405      	bmi.n	8000e6e <_vfiprintf_r+0x1fe>
 8000e62:	89ab      	ldrh	r3, [r5, #12]
 8000e64:	059a      	lsls	r2, r3, #22
 8000e66:	d402      	bmi.n	8000e6e <_vfiprintf_r+0x1fe>
 8000e68:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000e6a:	f7ff fddd 	bl	8000a28 <__retarget_lock_release_recursive>
 8000e6e:	89ab      	ldrh	r3, [r5, #12]
 8000e70:	065b      	lsls	r3, r3, #25
 8000e72:	f53f af1f 	bmi.w	8000cb4 <_vfiprintf_r+0x44>
 8000e76:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000e78:	e71e      	b.n	8000cb8 <_vfiprintf_r+0x48>
 8000e7a:	ab03      	add	r3, sp, #12
 8000e7c:	9300      	str	r3, [sp, #0]
 8000e7e:	462a      	mov	r2, r5
 8000e80:	4b05      	ldr	r3, [pc, #20]	@ (8000e98 <_vfiprintf_r+0x228>)
 8000e82:	a904      	add	r1, sp, #16
 8000e84:	4630      	mov	r0, r6
 8000e86:	f000 f879 	bl	8000f7c <_printf_i>
 8000e8a:	e7e4      	b.n	8000e56 <_vfiprintf_r+0x1e6>
 8000e8c:	0800147f 	.word	0x0800147f
 8000e90:	08001489 	.word	0x08001489
 8000e94:	00000000 	.word	0x00000000
 8000e98:	08000c4b 	.word	0x08000c4b
 8000e9c:	08001485 	.word	0x08001485

08000ea0 <_printf_common>:
 8000ea0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ea4:	4616      	mov	r6, r2
 8000ea6:	4698      	mov	r8, r3
 8000ea8:	688a      	ldr	r2, [r1, #8]
 8000eaa:	690b      	ldr	r3, [r1, #16]
 8000eac:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000eb0:	4293      	cmp	r3, r2
 8000eb2:	bfb8      	it	lt
 8000eb4:	4613      	movlt	r3, r2
 8000eb6:	6033      	str	r3, [r6, #0]
 8000eb8:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000ebc:	4607      	mov	r7, r0
 8000ebe:	460c      	mov	r4, r1
 8000ec0:	b10a      	cbz	r2, 8000ec6 <_printf_common+0x26>
 8000ec2:	3301      	adds	r3, #1
 8000ec4:	6033      	str	r3, [r6, #0]
 8000ec6:	6823      	ldr	r3, [r4, #0]
 8000ec8:	0699      	lsls	r1, r3, #26
 8000eca:	bf42      	ittt	mi
 8000ecc:	6833      	ldrmi	r3, [r6, #0]
 8000ece:	3302      	addmi	r3, #2
 8000ed0:	6033      	strmi	r3, [r6, #0]
 8000ed2:	6825      	ldr	r5, [r4, #0]
 8000ed4:	f015 0506 	ands.w	r5, r5, #6
 8000ed8:	d106      	bne.n	8000ee8 <_printf_common+0x48>
 8000eda:	f104 0a19 	add.w	sl, r4, #25
 8000ede:	68e3      	ldr	r3, [r4, #12]
 8000ee0:	6832      	ldr	r2, [r6, #0]
 8000ee2:	1a9b      	subs	r3, r3, r2
 8000ee4:	42ab      	cmp	r3, r5
 8000ee6:	dc26      	bgt.n	8000f36 <_printf_common+0x96>
 8000ee8:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000eec:	6822      	ldr	r2, [r4, #0]
 8000eee:	3b00      	subs	r3, #0
 8000ef0:	bf18      	it	ne
 8000ef2:	2301      	movne	r3, #1
 8000ef4:	0692      	lsls	r2, r2, #26
 8000ef6:	d42b      	bmi.n	8000f50 <_printf_common+0xb0>
 8000ef8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000efc:	4641      	mov	r1, r8
 8000efe:	4638      	mov	r0, r7
 8000f00:	47c8      	blx	r9
 8000f02:	3001      	adds	r0, #1
 8000f04:	d01e      	beq.n	8000f44 <_printf_common+0xa4>
 8000f06:	6823      	ldr	r3, [r4, #0]
 8000f08:	6922      	ldr	r2, [r4, #16]
 8000f0a:	f003 0306 	and.w	r3, r3, #6
 8000f0e:	2b04      	cmp	r3, #4
 8000f10:	bf02      	ittt	eq
 8000f12:	68e5      	ldreq	r5, [r4, #12]
 8000f14:	6833      	ldreq	r3, [r6, #0]
 8000f16:	1aed      	subeq	r5, r5, r3
 8000f18:	68a3      	ldr	r3, [r4, #8]
 8000f1a:	bf0c      	ite	eq
 8000f1c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000f20:	2500      	movne	r5, #0
 8000f22:	4293      	cmp	r3, r2
 8000f24:	bfc4      	itt	gt
 8000f26:	1a9b      	subgt	r3, r3, r2
 8000f28:	18ed      	addgt	r5, r5, r3
 8000f2a:	2600      	movs	r6, #0
 8000f2c:	341a      	adds	r4, #26
 8000f2e:	42b5      	cmp	r5, r6
 8000f30:	d11a      	bne.n	8000f68 <_printf_common+0xc8>
 8000f32:	2000      	movs	r0, #0
 8000f34:	e008      	b.n	8000f48 <_printf_common+0xa8>
 8000f36:	2301      	movs	r3, #1
 8000f38:	4652      	mov	r2, sl
 8000f3a:	4641      	mov	r1, r8
 8000f3c:	4638      	mov	r0, r7
 8000f3e:	47c8      	blx	r9
 8000f40:	3001      	adds	r0, #1
 8000f42:	d103      	bne.n	8000f4c <_printf_common+0xac>
 8000f44:	f04f 30ff 	mov.w	r0, #4294967295
 8000f48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f4c:	3501      	adds	r5, #1
 8000f4e:	e7c6      	b.n	8000ede <_printf_common+0x3e>
 8000f50:	18e1      	adds	r1, r4, r3
 8000f52:	1c5a      	adds	r2, r3, #1
 8000f54:	2030      	movs	r0, #48	@ 0x30
 8000f56:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000f5a:	4422      	add	r2, r4
 8000f5c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000f60:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000f64:	3302      	adds	r3, #2
 8000f66:	e7c7      	b.n	8000ef8 <_printf_common+0x58>
 8000f68:	2301      	movs	r3, #1
 8000f6a:	4622      	mov	r2, r4
 8000f6c:	4641      	mov	r1, r8
 8000f6e:	4638      	mov	r0, r7
 8000f70:	47c8      	blx	r9
 8000f72:	3001      	adds	r0, #1
 8000f74:	d0e6      	beq.n	8000f44 <_printf_common+0xa4>
 8000f76:	3601      	adds	r6, #1
 8000f78:	e7d9      	b.n	8000f2e <_printf_common+0x8e>
	...

08000f7c <_printf_i>:
 8000f7c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000f80:	7e0f      	ldrb	r7, [r1, #24]
 8000f82:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000f84:	2f78      	cmp	r7, #120	@ 0x78
 8000f86:	4691      	mov	r9, r2
 8000f88:	4680      	mov	r8, r0
 8000f8a:	460c      	mov	r4, r1
 8000f8c:	469a      	mov	sl, r3
 8000f8e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000f92:	d807      	bhi.n	8000fa4 <_printf_i+0x28>
 8000f94:	2f62      	cmp	r7, #98	@ 0x62
 8000f96:	d80a      	bhi.n	8000fae <_printf_i+0x32>
 8000f98:	2f00      	cmp	r7, #0
 8000f9a:	f000 80d2 	beq.w	8001142 <_printf_i+0x1c6>
 8000f9e:	2f58      	cmp	r7, #88	@ 0x58
 8000fa0:	f000 80b9 	beq.w	8001116 <_printf_i+0x19a>
 8000fa4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000fa8:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000fac:	e03a      	b.n	8001024 <_printf_i+0xa8>
 8000fae:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000fb2:	2b15      	cmp	r3, #21
 8000fb4:	d8f6      	bhi.n	8000fa4 <_printf_i+0x28>
 8000fb6:	a101      	add	r1, pc, #4	@ (adr r1, 8000fbc <_printf_i+0x40>)
 8000fb8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000fbc:	08001015 	.word	0x08001015
 8000fc0:	08001029 	.word	0x08001029
 8000fc4:	08000fa5 	.word	0x08000fa5
 8000fc8:	08000fa5 	.word	0x08000fa5
 8000fcc:	08000fa5 	.word	0x08000fa5
 8000fd0:	08000fa5 	.word	0x08000fa5
 8000fd4:	08001029 	.word	0x08001029
 8000fd8:	08000fa5 	.word	0x08000fa5
 8000fdc:	08000fa5 	.word	0x08000fa5
 8000fe0:	08000fa5 	.word	0x08000fa5
 8000fe4:	08000fa5 	.word	0x08000fa5
 8000fe8:	08001129 	.word	0x08001129
 8000fec:	08001053 	.word	0x08001053
 8000ff0:	080010e3 	.word	0x080010e3
 8000ff4:	08000fa5 	.word	0x08000fa5
 8000ff8:	08000fa5 	.word	0x08000fa5
 8000ffc:	0800114b 	.word	0x0800114b
 8001000:	08000fa5 	.word	0x08000fa5
 8001004:	08001053 	.word	0x08001053
 8001008:	08000fa5 	.word	0x08000fa5
 800100c:	08000fa5 	.word	0x08000fa5
 8001010:	080010eb 	.word	0x080010eb
 8001014:	6833      	ldr	r3, [r6, #0]
 8001016:	1d1a      	adds	r2, r3, #4
 8001018:	681b      	ldr	r3, [r3, #0]
 800101a:	6032      	str	r2, [r6, #0]
 800101c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001020:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8001024:	2301      	movs	r3, #1
 8001026:	e09d      	b.n	8001164 <_printf_i+0x1e8>
 8001028:	6833      	ldr	r3, [r6, #0]
 800102a:	6820      	ldr	r0, [r4, #0]
 800102c:	1d19      	adds	r1, r3, #4
 800102e:	6031      	str	r1, [r6, #0]
 8001030:	0606      	lsls	r6, r0, #24
 8001032:	d501      	bpl.n	8001038 <_printf_i+0xbc>
 8001034:	681d      	ldr	r5, [r3, #0]
 8001036:	e003      	b.n	8001040 <_printf_i+0xc4>
 8001038:	0645      	lsls	r5, r0, #25
 800103a:	d5fb      	bpl.n	8001034 <_printf_i+0xb8>
 800103c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8001040:	2d00      	cmp	r5, #0
 8001042:	da03      	bge.n	800104c <_printf_i+0xd0>
 8001044:	232d      	movs	r3, #45	@ 0x2d
 8001046:	426d      	negs	r5, r5
 8001048:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800104c:	4859      	ldr	r0, [pc, #356]	@ (80011b4 <_printf_i+0x238>)
 800104e:	230a      	movs	r3, #10
 8001050:	e011      	b.n	8001076 <_printf_i+0xfa>
 8001052:	6821      	ldr	r1, [r4, #0]
 8001054:	6833      	ldr	r3, [r6, #0]
 8001056:	0608      	lsls	r0, r1, #24
 8001058:	f853 5b04 	ldr.w	r5, [r3], #4
 800105c:	d402      	bmi.n	8001064 <_printf_i+0xe8>
 800105e:	0649      	lsls	r1, r1, #25
 8001060:	bf48      	it	mi
 8001062:	b2ad      	uxthmi	r5, r5
 8001064:	2f6f      	cmp	r7, #111	@ 0x6f
 8001066:	4853      	ldr	r0, [pc, #332]	@ (80011b4 <_printf_i+0x238>)
 8001068:	6033      	str	r3, [r6, #0]
 800106a:	bf14      	ite	ne
 800106c:	230a      	movne	r3, #10
 800106e:	2308      	moveq	r3, #8
 8001070:	2100      	movs	r1, #0
 8001072:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8001076:	6866      	ldr	r6, [r4, #4]
 8001078:	60a6      	str	r6, [r4, #8]
 800107a:	2e00      	cmp	r6, #0
 800107c:	bfa2      	ittt	ge
 800107e:	6821      	ldrge	r1, [r4, #0]
 8001080:	f021 0104 	bicge.w	r1, r1, #4
 8001084:	6021      	strge	r1, [r4, #0]
 8001086:	b90d      	cbnz	r5, 800108c <_printf_i+0x110>
 8001088:	2e00      	cmp	r6, #0
 800108a:	d04b      	beq.n	8001124 <_printf_i+0x1a8>
 800108c:	4616      	mov	r6, r2
 800108e:	fbb5 f1f3 	udiv	r1, r5, r3
 8001092:	fb03 5711 	mls	r7, r3, r1, r5
 8001096:	5dc7      	ldrb	r7, [r0, r7]
 8001098:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800109c:	462f      	mov	r7, r5
 800109e:	42bb      	cmp	r3, r7
 80010a0:	460d      	mov	r5, r1
 80010a2:	d9f4      	bls.n	800108e <_printf_i+0x112>
 80010a4:	2b08      	cmp	r3, #8
 80010a6:	d10b      	bne.n	80010c0 <_printf_i+0x144>
 80010a8:	6823      	ldr	r3, [r4, #0]
 80010aa:	07df      	lsls	r7, r3, #31
 80010ac:	d508      	bpl.n	80010c0 <_printf_i+0x144>
 80010ae:	6923      	ldr	r3, [r4, #16]
 80010b0:	6861      	ldr	r1, [r4, #4]
 80010b2:	4299      	cmp	r1, r3
 80010b4:	bfde      	ittt	le
 80010b6:	2330      	movle	r3, #48	@ 0x30
 80010b8:	f806 3c01 	strble.w	r3, [r6, #-1]
 80010bc:	f106 36ff 	addle.w	r6, r6, #4294967295
 80010c0:	1b92      	subs	r2, r2, r6
 80010c2:	6122      	str	r2, [r4, #16]
 80010c4:	f8cd a000 	str.w	sl, [sp]
 80010c8:	464b      	mov	r3, r9
 80010ca:	aa03      	add	r2, sp, #12
 80010cc:	4621      	mov	r1, r4
 80010ce:	4640      	mov	r0, r8
 80010d0:	f7ff fee6 	bl	8000ea0 <_printf_common>
 80010d4:	3001      	adds	r0, #1
 80010d6:	d14a      	bne.n	800116e <_printf_i+0x1f2>
 80010d8:	f04f 30ff 	mov.w	r0, #4294967295
 80010dc:	b004      	add	sp, #16
 80010de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80010e2:	6823      	ldr	r3, [r4, #0]
 80010e4:	f043 0320 	orr.w	r3, r3, #32
 80010e8:	6023      	str	r3, [r4, #0]
 80010ea:	4833      	ldr	r0, [pc, #204]	@ (80011b8 <_printf_i+0x23c>)
 80010ec:	2778      	movs	r7, #120	@ 0x78
 80010ee:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80010f2:	6823      	ldr	r3, [r4, #0]
 80010f4:	6831      	ldr	r1, [r6, #0]
 80010f6:	061f      	lsls	r7, r3, #24
 80010f8:	f851 5b04 	ldr.w	r5, [r1], #4
 80010fc:	d402      	bmi.n	8001104 <_printf_i+0x188>
 80010fe:	065f      	lsls	r7, r3, #25
 8001100:	bf48      	it	mi
 8001102:	b2ad      	uxthmi	r5, r5
 8001104:	6031      	str	r1, [r6, #0]
 8001106:	07d9      	lsls	r1, r3, #31
 8001108:	bf44      	itt	mi
 800110a:	f043 0320 	orrmi.w	r3, r3, #32
 800110e:	6023      	strmi	r3, [r4, #0]
 8001110:	b11d      	cbz	r5, 800111a <_printf_i+0x19e>
 8001112:	2310      	movs	r3, #16
 8001114:	e7ac      	b.n	8001070 <_printf_i+0xf4>
 8001116:	4827      	ldr	r0, [pc, #156]	@ (80011b4 <_printf_i+0x238>)
 8001118:	e7e9      	b.n	80010ee <_printf_i+0x172>
 800111a:	6823      	ldr	r3, [r4, #0]
 800111c:	f023 0320 	bic.w	r3, r3, #32
 8001120:	6023      	str	r3, [r4, #0]
 8001122:	e7f6      	b.n	8001112 <_printf_i+0x196>
 8001124:	4616      	mov	r6, r2
 8001126:	e7bd      	b.n	80010a4 <_printf_i+0x128>
 8001128:	6833      	ldr	r3, [r6, #0]
 800112a:	6825      	ldr	r5, [r4, #0]
 800112c:	6961      	ldr	r1, [r4, #20]
 800112e:	1d18      	adds	r0, r3, #4
 8001130:	6030      	str	r0, [r6, #0]
 8001132:	062e      	lsls	r6, r5, #24
 8001134:	681b      	ldr	r3, [r3, #0]
 8001136:	d501      	bpl.n	800113c <_printf_i+0x1c0>
 8001138:	6019      	str	r1, [r3, #0]
 800113a:	e002      	b.n	8001142 <_printf_i+0x1c6>
 800113c:	0668      	lsls	r0, r5, #25
 800113e:	d5fb      	bpl.n	8001138 <_printf_i+0x1bc>
 8001140:	8019      	strh	r1, [r3, #0]
 8001142:	2300      	movs	r3, #0
 8001144:	6123      	str	r3, [r4, #16]
 8001146:	4616      	mov	r6, r2
 8001148:	e7bc      	b.n	80010c4 <_printf_i+0x148>
 800114a:	6833      	ldr	r3, [r6, #0]
 800114c:	1d1a      	adds	r2, r3, #4
 800114e:	6032      	str	r2, [r6, #0]
 8001150:	681e      	ldr	r6, [r3, #0]
 8001152:	6862      	ldr	r2, [r4, #4]
 8001154:	2100      	movs	r1, #0
 8001156:	4630      	mov	r0, r6
 8001158:	f7ff f842 	bl	80001e0 <memchr>
 800115c:	b108      	cbz	r0, 8001162 <_printf_i+0x1e6>
 800115e:	1b80      	subs	r0, r0, r6
 8001160:	6060      	str	r0, [r4, #4]
 8001162:	6863      	ldr	r3, [r4, #4]
 8001164:	6123      	str	r3, [r4, #16]
 8001166:	2300      	movs	r3, #0
 8001168:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800116c:	e7aa      	b.n	80010c4 <_printf_i+0x148>
 800116e:	6923      	ldr	r3, [r4, #16]
 8001170:	4632      	mov	r2, r6
 8001172:	4649      	mov	r1, r9
 8001174:	4640      	mov	r0, r8
 8001176:	47d0      	blx	sl
 8001178:	3001      	adds	r0, #1
 800117a:	d0ad      	beq.n	80010d8 <_printf_i+0x15c>
 800117c:	6823      	ldr	r3, [r4, #0]
 800117e:	079b      	lsls	r3, r3, #30
 8001180:	d413      	bmi.n	80011aa <_printf_i+0x22e>
 8001182:	68e0      	ldr	r0, [r4, #12]
 8001184:	9b03      	ldr	r3, [sp, #12]
 8001186:	4298      	cmp	r0, r3
 8001188:	bfb8      	it	lt
 800118a:	4618      	movlt	r0, r3
 800118c:	e7a6      	b.n	80010dc <_printf_i+0x160>
 800118e:	2301      	movs	r3, #1
 8001190:	4632      	mov	r2, r6
 8001192:	4649      	mov	r1, r9
 8001194:	4640      	mov	r0, r8
 8001196:	47d0      	blx	sl
 8001198:	3001      	adds	r0, #1
 800119a:	d09d      	beq.n	80010d8 <_printf_i+0x15c>
 800119c:	3501      	adds	r5, #1
 800119e:	68e3      	ldr	r3, [r4, #12]
 80011a0:	9903      	ldr	r1, [sp, #12]
 80011a2:	1a5b      	subs	r3, r3, r1
 80011a4:	42ab      	cmp	r3, r5
 80011a6:	dcf2      	bgt.n	800118e <_printf_i+0x212>
 80011a8:	e7eb      	b.n	8001182 <_printf_i+0x206>
 80011aa:	2500      	movs	r5, #0
 80011ac:	f104 0619 	add.w	r6, r4, #25
 80011b0:	e7f5      	b.n	800119e <_printf_i+0x222>
 80011b2:	bf00      	nop
 80011b4:	08001490 	.word	0x08001490
 80011b8:	080014a1 	.word	0x080014a1

080011bc <__sflush_r>:
 80011bc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80011c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80011c4:	0716      	lsls	r6, r2, #28
 80011c6:	4605      	mov	r5, r0
 80011c8:	460c      	mov	r4, r1
 80011ca:	d454      	bmi.n	8001276 <__sflush_r+0xba>
 80011cc:	684b      	ldr	r3, [r1, #4]
 80011ce:	2b00      	cmp	r3, #0
 80011d0:	dc02      	bgt.n	80011d8 <__sflush_r+0x1c>
 80011d2:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80011d4:	2b00      	cmp	r3, #0
 80011d6:	dd48      	ble.n	800126a <__sflush_r+0xae>
 80011d8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80011da:	2e00      	cmp	r6, #0
 80011dc:	d045      	beq.n	800126a <__sflush_r+0xae>
 80011de:	2300      	movs	r3, #0
 80011e0:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80011e4:	682f      	ldr	r7, [r5, #0]
 80011e6:	6a21      	ldr	r1, [r4, #32]
 80011e8:	602b      	str	r3, [r5, #0]
 80011ea:	d030      	beq.n	800124e <__sflush_r+0x92>
 80011ec:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80011ee:	89a3      	ldrh	r3, [r4, #12]
 80011f0:	0759      	lsls	r1, r3, #29
 80011f2:	d505      	bpl.n	8001200 <__sflush_r+0x44>
 80011f4:	6863      	ldr	r3, [r4, #4]
 80011f6:	1ad2      	subs	r2, r2, r3
 80011f8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80011fa:	b10b      	cbz	r3, 8001200 <__sflush_r+0x44>
 80011fc:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80011fe:	1ad2      	subs	r2, r2, r3
 8001200:	2300      	movs	r3, #0
 8001202:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001204:	6a21      	ldr	r1, [r4, #32]
 8001206:	4628      	mov	r0, r5
 8001208:	47b0      	blx	r6
 800120a:	1c43      	adds	r3, r0, #1
 800120c:	89a3      	ldrh	r3, [r4, #12]
 800120e:	d106      	bne.n	800121e <__sflush_r+0x62>
 8001210:	6829      	ldr	r1, [r5, #0]
 8001212:	291d      	cmp	r1, #29
 8001214:	d82b      	bhi.n	800126e <__sflush_r+0xb2>
 8001216:	4a2a      	ldr	r2, [pc, #168]	@ (80012c0 <__sflush_r+0x104>)
 8001218:	410a      	asrs	r2, r1
 800121a:	07d6      	lsls	r6, r2, #31
 800121c:	d427      	bmi.n	800126e <__sflush_r+0xb2>
 800121e:	2200      	movs	r2, #0
 8001220:	6062      	str	r2, [r4, #4]
 8001222:	04d9      	lsls	r1, r3, #19
 8001224:	6922      	ldr	r2, [r4, #16]
 8001226:	6022      	str	r2, [r4, #0]
 8001228:	d504      	bpl.n	8001234 <__sflush_r+0x78>
 800122a:	1c42      	adds	r2, r0, #1
 800122c:	d101      	bne.n	8001232 <__sflush_r+0x76>
 800122e:	682b      	ldr	r3, [r5, #0]
 8001230:	b903      	cbnz	r3, 8001234 <__sflush_r+0x78>
 8001232:	6560      	str	r0, [r4, #84]	@ 0x54
 8001234:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001236:	602f      	str	r7, [r5, #0]
 8001238:	b1b9      	cbz	r1, 800126a <__sflush_r+0xae>
 800123a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800123e:	4299      	cmp	r1, r3
 8001240:	d002      	beq.n	8001248 <__sflush_r+0x8c>
 8001242:	4628      	mov	r0, r5
 8001244:	f7ff fbf2 	bl	8000a2c <_free_r>
 8001248:	2300      	movs	r3, #0
 800124a:	6363      	str	r3, [r4, #52]	@ 0x34
 800124c:	e00d      	b.n	800126a <__sflush_r+0xae>
 800124e:	2301      	movs	r3, #1
 8001250:	4628      	mov	r0, r5
 8001252:	47b0      	blx	r6
 8001254:	4602      	mov	r2, r0
 8001256:	1c50      	adds	r0, r2, #1
 8001258:	d1c9      	bne.n	80011ee <__sflush_r+0x32>
 800125a:	682b      	ldr	r3, [r5, #0]
 800125c:	2b00      	cmp	r3, #0
 800125e:	d0c6      	beq.n	80011ee <__sflush_r+0x32>
 8001260:	2b1d      	cmp	r3, #29
 8001262:	d001      	beq.n	8001268 <__sflush_r+0xac>
 8001264:	2b16      	cmp	r3, #22
 8001266:	d11e      	bne.n	80012a6 <__sflush_r+0xea>
 8001268:	602f      	str	r7, [r5, #0]
 800126a:	2000      	movs	r0, #0
 800126c:	e022      	b.n	80012b4 <__sflush_r+0xf8>
 800126e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001272:	b21b      	sxth	r3, r3
 8001274:	e01b      	b.n	80012ae <__sflush_r+0xf2>
 8001276:	690f      	ldr	r7, [r1, #16]
 8001278:	2f00      	cmp	r7, #0
 800127a:	d0f6      	beq.n	800126a <__sflush_r+0xae>
 800127c:	0793      	lsls	r3, r2, #30
 800127e:	680e      	ldr	r6, [r1, #0]
 8001280:	bf08      	it	eq
 8001282:	694b      	ldreq	r3, [r1, #20]
 8001284:	600f      	str	r7, [r1, #0]
 8001286:	bf18      	it	ne
 8001288:	2300      	movne	r3, #0
 800128a:	eba6 0807 	sub.w	r8, r6, r7
 800128e:	608b      	str	r3, [r1, #8]
 8001290:	f1b8 0f00 	cmp.w	r8, #0
 8001294:	dde9      	ble.n	800126a <__sflush_r+0xae>
 8001296:	6a21      	ldr	r1, [r4, #32]
 8001298:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800129a:	4643      	mov	r3, r8
 800129c:	463a      	mov	r2, r7
 800129e:	4628      	mov	r0, r5
 80012a0:	47b0      	blx	r6
 80012a2:	2800      	cmp	r0, #0
 80012a4:	dc08      	bgt.n	80012b8 <__sflush_r+0xfc>
 80012a6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012aa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80012ae:	81a3      	strh	r3, [r4, #12]
 80012b0:	f04f 30ff 	mov.w	r0, #4294967295
 80012b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80012b8:	4407      	add	r7, r0
 80012ba:	eba8 0800 	sub.w	r8, r8, r0
 80012be:	e7e7      	b.n	8001290 <__sflush_r+0xd4>
 80012c0:	dfbffffe 	.word	0xdfbffffe

080012c4 <_fflush_r>:
 80012c4:	b538      	push	{r3, r4, r5, lr}
 80012c6:	690b      	ldr	r3, [r1, #16]
 80012c8:	4605      	mov	r5, r0
 80012ca:	460c      	mov	r4, r1
 80012cc:	b913      	cbnz	r3, 80012d4 <_fflush_r+0x10>
 80012ce:	2500      	movs	r5, #0
 80012d0:	4628      	mov	r0, r5
 80012d2:	bd38      	pop	{r3, r4, r5, pc}
 80012d4:	b118      	cbz	r0, 80012de <_fflush_r+0x1a>
 80012d6:	6a03      	ldr	r3, [r0, #32]
 80012d8:	b90b      	cbnz	r3, 80012de <_fflush_r+0x1a>
 80012da:	f7ff f9ad 	bl	8000638 <__sinit>
 80012de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012e2:	2b00      	cmp	r3, #0
 80012e4:	d0f3      	beq.n	80012ce <_fflush_r+0xa>
 80012e6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80012e8:	07d0      	lsls	r0, r2, #31
 80012ea:	d404      	bmi.n	80012f6 <_fflush_r+0x32>
 80012ec:	0599      	lsls	r1, r3, #22
 80012ee:	d402      	bmi.n	80012f6 <_fflush_r+0x32>
 80012f0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80012f2:	f7ff fb98 	bl	8000a26 <__retarget_lock_acquire_recursive>
 80012f6:	4628      	mov	r0, r5
 80012f8:	4621      	mov	r1, r4
 80012fa:	f7ff ff5f 	bl	80011bc <__sflush_r>
 80012fe:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001300:	07da      	lsls	r2, r3, #31
 8001302:	4605      	mov	r5, r0
 8001304:	d4e4      	bmi.n	80012d0 <_fflush_r+0xc>
 8001306:	89a3      	ldrh	r3, [r4, #12]
 8001308:	059b      	lsls	r3, r3, #22
 800130a:	d4e1      	bmi.n	80012d0 <_fflush_r+0xc>
 800130c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800130e:	f7ff fb8b 	bl	8000a28 <__retarget_lock_release_recursive>
 8001312:	e7dd      	b.n	80012d0 <_fflush_r+0xc>

08001314 <__swhatbuf_r>:
 8001314:	b570      	push	{r4, r5, r6, lr}
 8001316:	460c      	mov	r4, r1
 8001318:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800131c:	2900      	cmp	r1, #0
 800131e:	b096      	sub	sp, #88	@ 0x58
 8001320:	4615      	mov	r5, r2
 8001322:	461e      	mov	r6, r3
 8001324:	da0d      	bge.n	8001342 <__swhatbuf_r+0x2e>
 8001326:	89a3      	ldrh	r3, [r4, #12]
 8001328:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800132c:	f04f 0100 	mov.w	r1, #0
 8001330:	bf14      	ite	ne
 8001332:	2340      	movne	r3, #64	@ 0x40
 8001334:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001338:	2000      	movs	r0, #0
 800133a:	6031      	str	r1, [r6, #0]
 800133c:	602b      	str	r3, [r5, #0]
 800133e:	b016      	add	sp, #88	@ 0x58
 8001340:	bd70      	pop	{r4, r5, r6, pc}
 8001342:	466a      	mov	r2, sp
 8001344:	f000 f848 	bl	80013d8 <_fstat_r>
 8001348:	2800      	cmp	r0, #0
 800134a:	dbec      	blt.n	8001326 <__swhatbuf_r+0x12>
 800134c:	9901      	ldr	r1, [sp, #4]
 800134e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8001352:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8001356:	4259      	negs	r1, r3
 8001358:	4159      	adcs	r1, r3
 800135a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800135e:	e7eb      	b.n	8001338 <__swhatbuf_r+0x24>

08001360 <__smakebuf_r>:
 8001360:	898b      	ldrh	r3, [r1, #12]
 8001362:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001364:	079d      	lsls	r5, r3, #30
 8001366:	4606      	mov	r6, r0
 8001368:	460c      	mov	r4, r1
 800136a:	d507      	bpl.n	800137c <__smakebuf_r+0x1c>
 800136c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001370:	6023      	str	r3, [r4, #0]
 8001372:	6123      	str	r3, [r4, #16]
 8001374:	2301      	movs	r3, #1
 8001376:	6163      	str	r3, [r4, #20]
 8001378:	b003      	add	sp, #12
 800137a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800137c:	ab01      	add	r3, sp, #4
 800137e:	466a      	mov	r2, sp
 8001380:	f7ff ffc8 	bl	8001314 <__swhatbuf_r>
 8001384:	9f00      	ldr	r7, [sp, #0]
 8001386:	4605      	mov	r5, r0
 8001388:	4639      	mov	r1, r7
 800138a:	4630      	mov	r0, r6
 800138c:	f7ff fbba 	bl	8000b04 <_malloc_r>
 8001390:	b948      	cbnz	r0, 80013a6 <__smakebuf_r+0x46>
 8001392:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001396:	059a      	lsls	r2, r3, #22
 8001398:	d4ee      	bmi.n	8001378 <__smakebuf_r+0x18>
 800139a:	f023 0303 	bic.w	r3, r3, #3
 800139e:	f043 0302 	orr.w	r3, r3, #2
 80013a2:	81a3      	strh	r3, [r4, #12]
 80013a4:	e7e2      	b.n	800136c <__smakebuf_r+0xc>
 80013a6:	89a3      	ldrh	r3, [r4, #12]
 80013a8:	6020      	str	r0, [r4, #0]
 80013aa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80013ae:	81a3      	strh	r3, [r4, #12]
 80013b0:	9b01      	ldr	r3, [sp, #4]
 80013b2:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80013b6:	b15b      	cbz	r3, 80013d0 <__smakebuf_r+0x70>
 80013b8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013bc:	4630      	mov	r0, r6
 80013be:	f000 f81d 	bl	80013fc <_isatty_r>
 80013c2:	b128      	cbz	r0, 80013d0 <__smakebuf_r+0x70>
 80013c4:	89a3      	ldrh	r3, [r4, #12]
 80013c6:	f023 0303 	bic.w	r3, r3, #3
 80013ca:	f043 0301 	orr.w	r3, r3, #1
 80013ce:	81a3      	strh	r3, [r4, #12]
 80013d0:	89a3      	ldrh	r3, [r4, #12]
 80013d2:	431d      	orrs	r5, r3
 80013d4:	81a5      	strh	r5, [r4, #12]
 80013d6:	e7cf      	b.n	8001378 <__smakebuf_r+0x18>

080013d8 <_fstat_r>:
 80013d8:	b538      	push	{r3, r4, r5, lr}
 80013da:	4d07      	ldr	r5, [pc, #28]	@ (80013f8 <_fstat_r+0x20>)
 80013dc:	2300      	movs	r3, #0
 80013de:	4604      	mov	r4, r0
 80013e0:	4608      	mov	r0, r1
 80013e2:	4611      	mov	r1, r2
 80013e4:	602b      	str	r3, [r5, #0]
 80013e6:	f7ff f812 	bl	800040e <_fstat>
 80013ea:	1c43      	adds	r3, r0, #1
 80013ec:	d102      	bne.n	80013f4 <_fstat_r+0x1c>
 80013ee:	682b      	ldr	r3, [r5, #0]
 80013f0:	b103      	cbz	r3, 80013f4 <_fstat_r+0x1c>
 80013f2:	6023      	str	r3, [r4, #0]
 80013f4:	bd38      	pop	{r3, r4, r5, pc}
 80013f6:	bf00      	nop
 80013f8:	200001d8 	.word	0x200001d8

080013fc <_isatty_r>:
 80013fc:	b538      	push	{r3, r4, r5, lr}
 80013fe:	4d06      	ldr	r5, [pc, #24]	@ (8001418 <_isatty_r+0x1c>)
 8001400:	2300      	movs	r3, #0
 8001402:	4604      	mov	r4, r0
 8001404:	4608      	mov	r0, r1
 8001406:	602b      	str	r3, [r5, #0]
 8001408:	f7ff f811 	bl	800042e <_isatty>
 800140c:	1c43      	adds	r3, r0, #1
 800140e:	d102      	bne.n	8001416 <_isatty_r+0x1a>
 8001410:	682b      	ldr	r3, [r5, #0]
 8001412:	b103      	cbz	r3, 8001416 <_isatty_r+0x1a>
 8001414:	6023      	str	r3, [r4, #0]
 8001416:	bd38      	pop	{r3, r4, r5, pc}
 8001418:	200001d8 	.word	0x200001d8

0800141c <_sbrk_r>:
 800141c:	b538      	push	{r3, r4, r5, lr}
 800141e:	4d06      	ldr	r5, [pc, #24]	@ (8001438 <_sbrk_r+0x1c>)
 8001420:	2300      	movs	r3, #0
 8001422:	4604      	mov	r4, r0
 8001424:	4608      	mov	r0, r1
 8001426:	602b      	str	r3, [r5, #0]
 8001428:	f7ff f81a 	bl	8000460 <_sbrk>
 800142c:	1c43      	adds	r3, r0, #1
 800142e:	d102      	bne.n	8001436 <_sbrk_r+0x1a>
 8001430:	682b      	ldr	r3, [r5, #0]
 8001432:	b103      	cbz	r3, 8001436 <_sbrk_r+0x1a>
 8001434:	6023      	str	r3, [r4, #0]
 8001436:	bd38      	pop	{r3, r4, r5, pc}
 8001438:	200001d8 	.word	0x200001d8

0800143c <_init>:
 800143c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800143e:	bf00      	nop
 8001440:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001442:	bc08      	pop	{r3}
 8001444:	469e      	mov	lr, r3
 8001446:	4770      	bx	lr

08001448 <_fini>:
 8001448:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800144a:	bf00      	nop
 800144c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800144e:	bc08      	pop	{r3}
 8001450:	469e      	mov	lr, r3
 8001452:	4770      	bx	lr
